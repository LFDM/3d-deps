{"version":3,"sources":["analyzers/jsonFile.ts","types/Config.ts","services/config.tsx","hooks/useQueryParam.ts","services/undoHistory.ts","services/uiState.tsx","components/Graph/index.tsx","hooks/useWindowSize.ts","components/Button.tsx","components/Hotkeys.tsx","components/ConfigRow.tsx","components/Hud/OverlayContext.tsx","components/ColorPicker.tsx","hooks/useOnClickOutside.ts","components/Input.tsx","components/Hud/ConfigPanel.tsx","components/NodeStats.tsx","components/Hud/HudSegment.tsx","components/Hud/CurrentSelection.tsx","hooks/usePromise.ts","services/dataset.tsx","components/Select.tsx","components/Hud/DatasetExplorer.tsx","services/scroll.ts","components/Hud/HistoryPanel.tsx","CssBaseline.tsx","components/Dialog.tsx","components/Hud/HotkeyInfoModal.tsx","hooks/useScrollIntoView.ts","components/FileTree/icons.tsx","components/FileTree/index.tsx","components/Hud/NodesPanel.tsx","components/Hud/SearchModal.tsx","components/Hud/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["dependenciesToGraphData","deps","nodes","Object","entries","forEach","k","node","id","path","label","dependsOn","filter","v","includes","push","FILES","then","f","default","Self","JsonFileAnalyzer","config","this","x","key","Error","CONFIG","theme","typography","font","backgroundColor","color","hud","primaryColor","secondaryColor","opacity","spacing","multiplier","graph","colors","standard","selected","unselected","dependency","dependent","links","dependencies","maxDepth","dependents","includeByPath","excludeByPath","sidebar","open","search","showExcludedNodes","hotkeys","ConfigContext","React","createContext","current","original","onChange","useConfig","useContext","toggleSidebar","nextState","incrementGraphDependenciesMaxDepth","increment","Math","max","min","setGraphDependenciesMaxDepth","incrementGraphDependentsMaxDepth","setGraphDependentsMaxDepth","toggleShowExcludedNodes","useQueryParam","param","defaultValue","location","useLocation","history","useHistory","useMemo","URL","window","toString","searchParams","get","nextValue","nextUrl","set","delete","UndoHistory","depth","initialState","past","present","undefined","future","listeners","nextEl","steps","i","length","unshift","pop","notify","shift","redo","undo","abs","el","listener","indexOf","splice","event","self","DEFAULT_STATE","tab","hotkeyInfo","data","list","byId","selectedNodeId","showDetails","UiStateContext","setSidebarTab","setSelectedNodeId","toggleSelectedNodeId","setHotkeyInfoOpen","setSearchOpen","toggleDetails","selectionHistoryMove","useUiState","UiStateProvider","children","setTab","useRef","useState","hotkeyInfoOpen","searchOpen","setState","value","nextSelection","getHistory","next","s","nextSel","move","Provider","addNodeStyle","styles","nodeId","addLinkStyle","linkId","traverseDependencies","d","mode","result","level","asTree","n","exclude","Infinity","linksBySource","linksByTarget","l","Graph","g","t","otherT","link","nanoid","source","target","ds","nodesById","keyBy","linksById","mapValues","groupBy","useData","graphConfig","dimensions","width","innerWidth","height","innerHeight","windowSize","setWindowSize","useLayoutEffect","handleResize","addEventListener","removeEventListener","useWindowSize","ref","ss","nodeColors","linkColors","console","warn","dependedBy","colorForLevel","c","clone","lighten","toRgbString","nodeDependentColor","tinycolor","nodeDepdendencyColor","particlesForLevel","floor","linkDependentColor","particles","linkDepdendencyColor","size","useEffect","setTimeout","r","cameraPosition","controlType","graphData","nodeVal","nodeColor","linkDirectionalParticles","linkDirectionalArrowLength","linkDirectionalArrowRelPos","linkDirectionalArrowColor","linkColor","nodeLabel","enableNodeDrag","onNodeClick","StyledButton","styled","p","borderWidth","padding","borderStyle","cursor","borderColor","outline","variant","textAlign","borderRadius","display","alignItems","justifyContent","marginLeft","fullWidth","Button","forwardRef","props","type","toSequence","name","sequences","action","NOOP","ev","log","Hotkeys","state","as","cfg","keyMap","hs","handlers","openSideBarTab","allowChanges","ConfigRow","dense","OverlayContext","active","setActive","OverlayContextProvider","Container","position","ColorName","ColorValue","Swatch","PickerContainer","top","right","zIndex","ColorPicker","_setOpen","setOpen","useCallback","nextOpen","usePopupState","handler","contains","document","useOnClickOutside","onClick","onKeyDown","stopPropagation","nextColor","hex","StyledInput","boxSizing","Input","theirRef","blurOnEscape","oKD","blur","SliderContainer","marginRight","InputSliderWithValue","SubSection","marginBottom","ThemeSection","originalValue","RegExpRow","onConfirm","slice","setV","useTheme","onSubmit","preventDefault","RegExp","disabled","GraphSection","parseInt","ControlsGrid","gridTemplateColumns","gridColumnGap","FooterContainer","Footer","json","JSON","stringify","copy","format","Body","ConfigPanel","nextGraph","nextTheme","Pill","setAlpha","toHexString","minWidth","NodeStats","countWithoutExcluded","HudSegment","left","Title","fontSize","excluded","DetailsContainer","paddingTop","paddingBottom","paddingRight","Tbd","Details","CurrentSelection","useLoadingValue","initialValue","initialLoading","toInitialState","loading","error","setLoading","nextLoading","setValue","setError","nextError","reset","DATASET_CACHE","useResolveDataset","dataset","fn","rev","setRev","forceReload","prev","val","err","usePromise","a","fetch","Datasets","datasets","selectDataset","DatasetProvider","message","useDatasets","Select","border","option","DatasetExplorer","find","map","scrollElementIntoView","container","element","o","getBoundingClientRect","bottom","yDiff","scrollBy","List","Item","EmptyState","HistoryPanel","scrollContainer","presentT","selectionRef","CssBaseline","h4","marginTop","h5","scrollbarWidth","scrollbarColor","background","ReactModal","setAppElement","DialogTitle","DialogBody","Dialog","onClose","center","overflow","style","overlay","content","isOpen","onRequestClose","HotkeyGrid","gridRowGap","HotkeyValues","HotkeyValue","HotkeyRow","h","Fragment","sequence","HotkeyInfoModal","getApplicationKeyMap","isElementInViewport","thresholds","elTop","elLeft","elBottom","elRight","vpTop","vpLeft","vpBottom","documentElement","clientHeight","vpRight","clientWidth","MinusSquareO","viewBox","PlusSquareO","CloseSquareO","SEPARATOR","toFileTree","items","dirs","files","parts","split","file","lastDir","dirPath","join","parentDirPath","Frame","Content","toggle","verticalAlign","Row","clickable","Tree","memo","isSelected","rightSlot","options","behavior","block","inline","scrollIntoView","useScrollIntoView","Icon","Icons","FileTreeDirectoryContent","dir","onSelect","openNodes","setOpenNodes","selectedItemKey","item","FileTree","NodesPanel","rootDir","sortBy","treeNode","toOpen","CustomInput","EmptyListItem","ListContainer","borderTop","maxHeight","ItemLabel","brighten","listRef","dangerouslySetInnerHTML","__html","Controls","SearchModal","q","setQ","setSelected","close","select","searchableNodes","nodesWithHighlights","highlightedLabel","time","results","fuzzysort","go","allowTypo","obj","highlight","timeEnd","selectableNodes","focus","altKey","sel","overlayActive","Grid","SidebarContainer","RightContainer","Tab","gridArea","Tabs","borderBottom","Sidebar","containerRef","ControlsContainer","ControlButton","sidebarOpen","useOverlayContext","Hud","Main","depsToGraphData","opts","dsById","getOrCreateTreeNode","test","shouldExcludeByPath","nextDId","nextD","nextT","AppReady","originalConfig","setConfig","useGraphData","InitCanvas","AppLoading","AppError","AppInit","assertNever","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","toDataset","analyze","ReactDOM","render","StrictMode","getElementById","run"],"mappings":"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","file":"static/js/main.775643c8.chunk.js","sourcesContent":["// // @ts-ignore\n// import * as madge from \"madge\";\nimport {\n  DependencyNode,\n  IDependencyAnalyzer,\n} from \"../types/DependencyAnalyzer\";\n// import DEPS from \"./dependencies-affilimate-cli.json\";\n\nconst dependenciesToGraphData = (deps: { [key: string]: string[] }) => {\n  const nodes: DependencyNode[] = [];\n  Object.entries(deps).forEach(([k, vs]) => {\n    const node: DependencyNode = {\n      id: k,\n      path: k,\n      label: k,\n      dependsOn: vs.filter((v) => !v.includes(\"node_modules\")),\n    };\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nconst FILES: { [name: string]: () => Promise<{ [key: string]: string[] }> } = {\n  \"Affilimate CFs\": () =>\n    import(\"./dependencies-affilimate-cf.json\").then((f) => f.default),\n  \"Affilimate CLI\": () =>\n    import(\"./dependencies-affilimate-cli.json\").then((f) => f.default),\n  \"Affilimate App\": () =>\n    import(\"./dependencies-affilimate-app.json\").then((f) => f.default),\n  \"Syndexioi App\": () =>\n    import(\"./dependencies-syndexioi-app.json\").then((f) => f.default),\n  \"Syndexioi CFs\": () =>\n    import(\"./dependencies-syndexioi-cf.json\").then((f) => f.default),\n  \"Material UI\": () => import(\"./dependencies-mui.json\").then((f) => f.default),\n  Self: () => import(\"./dependencies-self.json\").then((f) => f.default),\n};\n\nexport type JsonFileAnalyzerConfig = {\n  key: string;\n};\n\nexport class JsonFileAnalyzer implements IDependencyAnalyzer {\n  private config: JsonFileAnalyzerConfig;\n  constructor(config: JsonFileAnalyzerConfig) {\n    this.config = config;\n  }\n\n  async analyze() {\n    const x = FILES[this.config.key];\n    if (!x) {\n      throw new Error(\"UNKNWON_FILE\");\n    }\n    return dependenciesToGraphData(await x());\n  }\n}\n","export type Theme = {\n  typography: {\n    font: string;\n    backgroundColor: string;\n    color: string;\n  };\n  hud: {\n    color: string;\n    primaryColor: string;\n    secondaryColor: string;\n    backgroundColor: string;\n    opacity: number;\n  };\n  spacing: (multiplier?: number) => number;\n  graph: {\n    nodes: {\n      colors: {\n        standard: string;\n        selected: string;\n        unselected: string;\n        dependent: string;\n        dependency: string;\n      };\n    };\n    links: {\n      colors: {\n        standard: string;\n        dependent: string;\n        dependency: string;\n        unselected: string;\n      };\n    };\n  };\n};\n\nexport type GraphConfig = {\n  dependencies: {\n    maxDepth: number;\n  };\n  dependents: {\n    maxDepth: number;\n  };\n  excludeByPath?: RegExp | null;\n  includeByPath?: RegExp | null;\n};\n\nexport type HudConfig = {\n  sidebar: {\n    open: boolean;\n  };\n  search: {\n    showExcludedNodes: boolean;\n  };\n};\n\nexport type Hotkey =\n  | \"hud.sidebar.toggle\"\n  | \"hud.sidebar.openNodesPanel\"\n  | \"hud.sidebar.openConfigPanel\"\n  | \"hud.sidebar.openHistoryPanel\"\n  | \"hud.search\"\n  | \"hud.hotkeyInfo\"\n  | \"graph.dependencies.maxDepth.increase\"\n  | \"graph.dependencies.maxDepth.decrease\"\n  | \"graph.dependents.maxDepth.increase\"\n  | \"graph.dependents.maxDepth.decrease\"\n  | \"graph.selectedNode.exclude\"\n  | \"graph.selectedNode.toggleDetails\"\n  | \"graph.selectedNode.toggleSelection\"\n  | \"graph.selectedNode.history.forward\"\n  | \"graph.selectedNode.history.backward\";\n\nexport type HotkeyConfig = { [K in Hotkey]: string[] };\n\nexport type Config = {\n  theme: Theme;\n  graph: GraphConfig;\n  hud: HudConfig;\n  hotkeys: HotkeyConfig;\n};\n\nexport const CONFIG: Config = {\n  theme: {\n    typography: {\n      font: \"400 14px Arial\",\n      backgroundColor: \"#141414\",\n      color: \"#f4f4f4\",\n    },\n    hud: {\n      color: \"#f4f4f4\",\n      primaryColor: \"#ea6161\",\n      backgroundColor: \"#1e1e1e\",\n      secondaryColor: \"#1c5cc2\",\n      opacity: 0.75,\n    },\n    spacing: (multiplier = 1) => multiplier * 8,\n    graph: {\n      nodes: {\n        colors: {\n          standard: \"#fcf4b0\",\n          selected: \"#A992EE\",\n          unselected: \"#313131\", //  \"#050505\" darker, basically black\n          dependency: \"#f47560\", // #B5503D darker - darker is better. then the color dropoff for indirect nodes could be steeper too\n          dependent: \"#61cdbb\", // #258374 darker\n        },\n      },\n      links: {\n        colors: {\n          standard: \"#d3d3d3\",\n          dependency: \"#f47560\",\n          dependent: \"#61cdbb\",\n          unselected: \"#313131\", //  \"#050505\" darker, basically black\n        },\n      },\n    },\n  },\n  graph: {\n    dependencies: {\n      maxDepth: 1,\n    },\n    dependents: {\n      maxDepth: 1,\n    },\n    includeByPath: null,\n    excludeByPath: /(^helpers.ts|^domainTypes|^versions|^services\\/firebase)/,\n  },\n  hud: {\n    sidebar: {\n      open: true,\n    },\n    search: {\n      showExcludedNodes: true,\n    },\n  },\n  hotkeys: {\n    \"hud.sidebar.toggle\": [\"alt+b\"],\n    \"hud.sidebar.openNodesPanel\": [\"alt+n\"],\n    \"hud.sidebar.openHistoryPanel\": [\"alt+h\"],\n    \"hud.sidebar.openConfigPanel\": [\"alt+c\"],\n    \"hud.search\": [\"/\", \"f\"],\n    \"hud.hotkeyInfo\": [\"shift+/\"], // ? doesn't seem to work\n    \"graph.dependencies.maxDepth.increase\": [\"alt+k\", \"alt+up\"],\n    \"graph.dependencies.maxDepth.decrease\": [\"alt+j\", \"alt+down\"],\n    \"graph.dependents.maxDepth.increase\": [\"alt+shift+k\", \"alt+shift+up\"],\n    \"graph.dependents.maxDepth.decrease\": [\"alt+shift+j\", \"alt+shift+down\"],\n    \"graph.selectedNode.exclude\": [\"del\"],\n    \"graph.selectedNode.toggleDetails\": [\"d\"],\n    \"graph.selectedNode.toggleSelection\": [\"s\"],\n    \"graph.selectedNode.history.forward\": [\"j\"],\n    \"graph.selectedNode.history.backward\": [\"k\"],\n  },\n};\n","import React, { useContext } from \"react\";\nimport { CONFIG, Config } from \"../types/Config\";\n\nexport const ConfigContext = React.createContext<{\n  current: Config;\n  original: Config;\n  onChange: (nextConfig: Config) => void;\n}>({\n  current: CONFIG,\n  original: CONFIG,\n  onChange: () => undefined,\n});\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport const toggleSidebar = (\n  current: Config,\n  onChange: (nextConfig: Config) => void,\n  nextState: boolean = !current.hud.sidebar.open\n) => {\n  onChange({\n    ...current,\n    hud: {\n      ...current.hud,\n      sidebar: {\n        ...current.hud.sidebar,\n        open: nextState,\n      },\n    },\n  });\n};\n\nconst setGraphDependenciesMaxDepth = (\n  current: Config,\n  onChange: (nextConfig: Config) => void,\n  nextState: number\n) => {\n  return onChange({\n    ...current,\n    graph: {\n      ...current.graph,\n      dependencies: {\n        ...current.graph.dependencies,\n        maxDepth: Math.max(0, Math.min(10, nextState)),\n      },\n    },\n  });\n};\n\nexport const incrementGraphDependenciesMaxDepth = (\n  current: Config,\n  onChange: (nextConfig: Config) => void,\n  increment: number\n) =>\n  setGraphDependenciesMaxDepth(\n    current,\n    onChange,\n    current.graph.dependencies.maxDepth + increment\n  );\n\nconst setGraphDependentsMaxDepth = (\n  current: Config,\n  onChange: (nextConfig: Config) => void,\n  nextState: number\n) => {\n  return onChange({\n    ...current,\n    graph: {\n      ...current.graph,\n      dependents: {\n        ...current.graph.dependents,\n        maxDepth: Math.max(0, Math.min(10, nextState)),\n      },\n    },\n  });\n};\n\nexport const incrementGraphDependentsMaxDepth = (\n  current: Config,\n  onChange: (nextConfig: Config) => void,\n  increment: number\n) =>\n  setGraphDependentsMaxDepth(\n    current,\n    onChange,\n    current.graph.dependents.maxDepth + increment\n  );\n\nexport const toggleShowExcludedNodes = (\n  current: Config,\n  onChange: (nextConfig: Config) => void,\n  nextState: boolean = !current.hud.search.showExcludedNodes\n) => {\n  return onChange({\n    ...current,\n    hud: {\n      ...current.hud,\n      search: {\n        ...current.hud.search,\n        showExcludedNodes: nextState,\n      },\n    },\n  });\n};\n","import { useMemo } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nexport const useQueryParam = (\n  param: string,\n  defaultValue = \"\"\n): [string, (nextValue: string | null) => void] => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return useMemo(() => {\n    const u = new URL(window.location.toString());\n    const v = u.searchParams.get(param) || defaultValue;\n\n    return [\n      v,\n      (nextValue: string | null) => {\n        const nextUrl = new URL(window.location.toString());\n        if (!nextValue) {\n          nextUrl.searchParams.delete(param);\n        } else {\n          nextUrl.searchParams.set(param, nextValue);\n        }\n        return history.push(nextUrl.search);\n      },\n    ];\n  }, [param, location, history]);\n};\n","type History<T> = {\n  past: T[];\n  present: T | undefined;\n  future: T[];\n};\n\ntype HistoryListenerEvent = \"listen\" | \"push\" | \"undo\" | \"redo\" | \"unlisten\";\ntype HistoryListener<T> = (\n  event: HistoryListenerEvent,\n  d: { steps: number; current: T | undefined; self: UndoHistory<T> }\n) => void;\n\nexport class UndoHistory<T> {\n  private depth: number;\n  private history: History<T> = { past: [], present: undefined, future: [] };\n  private listeners: HistoryListener<T>[] = [];\n\n  constructor(depth: number = 25, initialState: Partial<History<T>> = {}) {\n    this.depth = depth;\n    this.history.past = initialState?.past || this.history.past;\n    this.history.present = initialState?.present || this.history.present;\n    this.history.future = initialState?.future || this.history.future;\n  }\n\n  getHistory() {\n    return this.history;\n  }\n\n  undo(steps = 1) {\n    if (steps === 0) {\n      return this.history.present;\n    }\n    let nextEl: T | undefined;\n    for (let i = 0; i < steps; i++) {\n      if (!this.history.past.length) {\n        return nextEl;\n      }\n      if (this.history.present !== undefined) {\n        this.history.future.unshift(this.history.present);\n      }\n      nextEl = this.history.past.pop();\n      this.history.present = nextEl;\n    }\n    // TODO Interesting question - should this trigger before we return or hidden\n    // behind a setTimeout?\n    nextEl && this.notify(\"undo\", this.listeners, steps);\n    return nextEl;\n  }\n\n  redo(steps = 1) {\n    if (steps === 0) {\n      return this.history.present;\n    }\n    let nextEl: T | undefined;\n    for (let i = 0; i < steps; i++) {\n      if (!this.history.future.length) {\n        return nextEl;\n      }\n      if (this.history.present !== undefined) {\n        this.history.past.push(this.history.present);\n      }\n      nextEl = this.history.future.shift();\n      this.history.present = nextEl;\n    }\n    nextEl && this.notify(\"redo\", this.listeners, steps);\n    return nextEl;\n  }\n\n  move(steps: number) {\n    return steps > 0 ? this.redo(steps) : this.undo(Math.abs(steps));\n  }\n\n  push(el: T) {\n    this.history.future = [];\n    if (this.history.present !== undefined) {\n      this.history.past.push(this.history.present);\n    }\n    this.history.present = el;\n    if (this.history.past.length > this.depth) {\n      this.history.past.shift();\n    }\n    this.notify(\"push\", this.listeners);\n  }\n\n  listen(listener: HistoryListener<T>) {\n    this.listeners.push(listener);\n    this.notify(\"listen\", [listener]);\n  }\n\n  unlisten(listener: HistoryListener<T>) {\n    const i = this.listeners.indexOf(listener);\n    if (i !== -1) {\n      this.listeners.splice(i, 1);\n    }\n    this.notify(\"unlisten\", [listener]);\n  }\n\n  private notify(\n    event: HistoryListenerEvent,\n    listeners: HistoryListener<T>[],\n    steps = 0\n  ) {\n    listeners.forEach((listener) =>\n      listener(event, {\n        steps,\n        current: this.history.present,\n        self: this,\n      })\n    );\n  }\n}\n","import React, { useContext, useMemo, useRef, useState } from \"react\";\nimport { useQueryParam } from \"../hooks/useQueryParam\";\nimport { GraphData } from \"../types/GraphData\";\nimport { UndoHistory } from \"./undoHistory\";\n\nexport type TabName = \"nodes\" | \"history\" | \"config\";\n\nexport type UiState = {\n  hud: {\n    sidebar: {\n      tab: TabName;\n    };\n    hotkeyInfo: {\n      open: boolean;\n    };\n    search: {\n      open: boolean;\n    };\n  };\n  graph: {\n    data: GraphData;\n    history: UndoHistory<string>;\n    selectedNodeId: string | null;\n    showDetails: boolean;\n  };\n};\n\nconst DEFAULT_STATE: UiState = {\n  hud: {\n    sidebar: {\n      tab: \"nodes\",\n    },\n    hotkeyInfo: {\n      open: false,\n    },\n    search: {\n      open: false,\n    },\n  },\n  graph: {\n    data: { list: [], byId: {} },\n    history: new UndoHistory(0),\n    selectedNodeId: null,\n    showDetails: true,\n  },\n};\n\nexport type UiStateActions = {\n  setSidebarTab: (tab: TabName) => void;\n  setSelectedNodeId: (nodeId: string | null) => void;\n  toggleSelectedNodeId: () => void;\n  setHotkeyInfoOpen: (nextState: boolean) => void;\n  setSearchOpen: (nextState: boolean) => void;\n  toggleDetails: (nextState?: boolean) => void;\n  selectionHistoryMove: (steps: number) => void;\n};\n\nconst UiStateContext = React.createContext<readonly [UiState, UiStateActions]>([\n  DEFAULT_STATE,\n  {\n    setSidebarTab: () => undefined,\n    setSelectedNodeId: () => undefined,\n    toggleSelectedNodeId: () => undefined,\n    setHotkeyInfoOpen: () => undefined,\n    setSearchOpen: () => undefined,\n    toggleDetails: () => undefined,\n    selectionHistoryMove: () => undefined,\n  },\n]);\n\nexport const useUiState = () => useContext(UiStateContext);\n\nexport const UiStateProvider: React.FC<{ data: GraphData }> = ({\n  data,\n  children,\n}) => {\n  const [tab, setTab] = useQueryParam(\"tab\", \"nodes\");\n  const [selectedNodeId, setSelectedNodeId] = useQueryParam(\"node\");\n  const history = useRef(\n    new UndoHistory<string>(25, { present: selectedNodeId || undefined })\n  );\n  const [{ hotkeyInfoOpen, searchOpen, showDetails }, setState] = useState<{\n    hotkeyInfoOpen: boolean;\n    searchOpen: boolean;\n    showDetails: boolean;\n  }>({\n    hotkeyInfoOpen: false,\n    searchOpen: false,\n    showDetails: false,\n  });\n\n  // TODO optimize so that only what changes really changes. Right now we're\n  // blasing the whole object with every change\n\n  const value = useMemo<[UiState, UiStateActions]>(\n    () => [\n      {\n        hud: {\n          sidebar: {\n            tab: tab as TabName,\n          },\n          hotkeyInfo: {\n            open: hotkeyInfoOpen,\n          },\n          search: {\n            open: searchOpen,\n          },\n        },\n        graph: {\n          data,\n          history: history.current,\n          selectedNodeId: selectedNodeId || null,\n          showDetails,\n        },\n      },\n      {\n        setSidebarTab: setTab,\n        setSelectedNodeId: (nextSelection) => {\n          if (nextSelection) {\n            history.current.push(nextSelection);\n          }\n          setSelectedNodeId(nextSelection);\n        },\n        toggleSelectedNodeId: () => {\n          const { present } = history.current.getHistory();\n          if (!selectedNodeId && present) {\n            setSelectedNodeId(present);\n          }\n          if (selectedNodeId) {\n            setSelectedNodeId(null);\n          }\n        },\n        setHotkeyInfoOpen: (next) =>\n          setState((s) => ({\n            ...s,\n            hotkeyInfoOpen: next,\n          })),\n        setSearchOpen: (next) =>\n          setState((s) => ({\n            ...s,\n            searchOpen: next,\n          })),\n        toggleDetails: (nextState = !showDetails) =>\n          setState((s) => ({\n            ...s,\n            showDetails: nextState,\n          })),\n        selectionHistoryMove: (steps: number) => {\n          const nextSel = history.current.move(steps);\n          if (nextSel) {\n            setSelectedNodeId(nextSel);\n          }\n        },\n      },\n    ],\n    [data, tab, selectedNodeId, hotkeyInfoOpen, searchOpen, showDetails]\n  );\n  return (\n    <UiStateContext.Provider value={value}>{children}</UiStateContext.Provider>\n  );\n};\n","import { groupBy, keyBy, mapValues } from \"lodash\";\nimport { nanoid } from \"nanoid\";\nimport React, { useEffect, useMemo, useRef } from \"react\";\nimport { ForceGraph3D } from \"react-force-graph\";\nimport tinycolor from \"tinycolor2\";\nimport { useWindowSize } from \"../../hooks/useWindowSize\";\nimport { useConfig } from \"../../services/config\";\nimport { useUiState } from \"../../services/uiState\";\nimport {\n  GraphData,\n  IGraphLink,\n  IGraphNode,\n  TreeNode,\n} from \"../../types/GraphData\";\n\ntype NodeStyle = Partial<{\n  color: string;\n  opacity: number;\n  size: number;\n}>;\ntype LinkStyle = Partial<{\n  color: string;\n  particles: number;\n}>;\n\ntype Styles = {\n  nodes: {\n    [id: string]: NodeStyle;\n  };\n  links: {\n    [id: string]: LinkStyle;\n  };\n};\n\nconst addNodeStyle = (styles: Styles, nodeId: string, s: NodeStyle) => {\n  const v = (styles.nodes[nodeId] = styles.nodes[nodeId] || {});\n  styles.nodes[nodeId] = { ...v, ...s };\n};\n\nconst addLinkStyle = (styles: Styles, linkId: string, s: LinkStyle) => {\n  const v = (styles.links[linkId] = styles.links[linkId] || {});\n  styles.links[linkId] = { ...v, ...s };\n};\n\ntype Data = {\n  ds: {\n    nodes: IGraphNode[];\n    links: IGraphLink[];\n  };\n\n  nodesById: { [id: string]: IGraphNode };\n  linksById: { [id: string]: IGraphLink };\n  linksBySource: { [sourceId: string]: { [targetId: string]: IGraphLink[] } };\n  linksByTarget: { [targetId: string]: { [sourceId: string]: IGraphLink[] } };\n\n  asTree: { [id: string]: TreeNode };\n};\n\nconst traverseDependencies = (\n  d: Data,\n  current: string,\n  mode: \"dependsOn\" | \"dependedBy\",\n  result: {\n    nodes: { [id: string]: number };\n    links: { [id: string]: number };\n  },\n  level: number,\n  maxDepth: number\n): {\n  nodes: { [id: string]: number };\n  links: { [id: string]: number };\n} => {\n  if (level < maxDepth) {\n    const treeNode = d.asTree[current];\n    treeNode[mode].nodes.forEach((n) => {\n      // always use the most direct level!\n      if (n.exclude) {\n        return;\n      }\n      if ((result.nodes[n.id] || Infinity) > level) {\n        result.nodes[n.id] = level;\n        const links =\n          mode === \"dependsOn\"\n            ? d.linksBySource[current]?.[n.id] || []\n            : d.linksByTarget[current]?.[n.id] || [];\n        links.forEach((l) => (result.links[l.id] = level));\n      }\n      traverseDependencies(d, n.id, mode, result, level + 1, maxDepth);\n    });\n  }\n  return result;\n};\n\nconst useData = (g: GraphData): Data => {\n  return useMemo(() => {\n    const nodes: IGraphNode[] = [];\n    const links: IGraphLink[] = [];\n\n    g.list.forEach((t) => {\n      if (t.exclude) {\n        return;\n      }\n      const node: IGraphNode = {\n        id: t.id,\n        label: t.label,\n        path: t.path,\n      };\n      nodes.push(node);\n\n      t.dependsOn.nodes.forEach((otherT) => {\n        if (otherT.exclude) {\n          return;\n        }\n        const link: IGraphLink = {\n          id: nanoid(), // this could probably be a more stable id?\n          source: t.id,\n          target: otherT.id,\n        };\n        links.push(link);\n      });\n    });\n\n    return {\n      ds: {\n        nodes,\n        links,\n      },\n      nodesById: keyBy(nodes, (n) => n.id),\n      linksById: keyBy(links, (l) => l.id),\n      linksBySource: mapValues(\n        groupBy(links, (l) => l.source),\n        (v) => groupBy(v, (l) => l.target)\n      ),\n      linksByTarget: mapValues(\n        groupBy(links, (l) => l.target),\n        (v) => groupBy(v, (l) => l.source)\n      ),\n\n      asTree: g.byId,\n    };\n  }, [g]);\n};\n\nexport const Graph = () => {\n  const [\n    {\n      graph: { selectedNodeId, data: g },\n    },\n    { setSelectedNodeId },\n  ] = useUiState();\n\n  const data = useData(g);\n  const { theme, graph: graphConfig } = useConfig().current;\n  const dimensions = useWindowSize();\n\n  const ref = useRef();\n\n  const styles = useMemo(() => {\n    const ss: Styles = {\n      nodes: {},\n      links: {},\n    };\n    const nodeColors = theme.graph.nodes.colors;\n    const linkColors = theme.graph.links.colors;\n    const emptyContainer = () => ({ nodes: {}, links: {} });\n\n    if (selectedNodeId) {\n      if (!data.nodesById[selectedNodeId]) {\n        console.warn(\n          `Unknown node ${selectedNodeId} encountered - continuing without selection`\n        );\n        return ss;\n      }\n      const dependsOn = traverseDependencies(\n        data,\n        selectedNodeId,\n        \"dependsOn\",\n        emptyContainer(),\n        0,\n        graphConfig.dependents.maxDepth\n      );\n      const dependedBy = traverseDependencies(\n        data,\n        selectedNodeId,\n        \"dependedBy\",\n        emptyContainer(),\n        0,\n        graphConfig.dependencies.maxDepth\n      );\n\n      const colorForLevel = (c: tinycolor.Instance, level: number) =>\n        c\n          .clone()\n          // .setAlpha(Math.max(0.3, 1 - level / 2)) // opacity doesn't work - arrowheads don't support it\n          .lighten(Math.min(30, level * 12))\n          .toRgbString();\n\n      const nodeDependentColor = tinycolor(nodeColors.dependent);\n      Object.entries(dependsOn.nodes).forEach(([nodeId, level]) => {\n        addNodeStyle(ss, nodeId, {\n          color: colorForLevel(nodeDependentColor, level),\n        });\n      });\n\n      const nodeDepdendencyColor = tinycolor(nodeColors.dependency);\n      Object.entries(dependedBy.nodes).forEach(([nodeId, level]) => {\n        addNodeStyle(ss, nodeId, {\n          color: colorForLevel(nodeDepdendencyColor, level),\n        });\n      });\n\n      const particlesForLevel = (level: number) =>\n        Math.max(1, Math.floor(9 - level * 4));\n\n      const linkDependentColor = tinycolor(linkColors.dependent);\n      Object.entries(dependsOn.links).forEach(([linkId, level]) => {\n        addLinkStyle(ss, linkId, {\n          color: colorForLevel(linkDependentColor, level),\n          particles: particlesForLevel(level),\n        });\n      });\n\n      const linkDepdendencyColor = tinycolor(linkColors.dependency);\n      Object.entries(dependedBy.links).forEach(([linkId, level]) => {\n        addLinkStyle(ss, linkId, {\n          color: colorForLevel(linkDepdendencyColor, level),\n          particles: particlesForLevel(level),\n        });\n      });\n\n      data.ds.nodes.forEach((n) => {\n        if (\n          dependedBy.nodes[n.id] === undefined &&\n          dependsOn.nodes[n.id] === undefined\n        ) {\n          addNodeStyle(ss, n.id, {\n            color: nodeColors.unselected,\n            size: 0.5,\n          });\n        }\n      });\n      data.ds.links.forEach((l) => {\n        if (\n          dependedBy.links[l.id] === undefined &&\n          dependsOn.links[l.id] === undefined\n        ) {\n          addLinkStyle(ss, l.id, { color: linkColors.unselected });\n        }\n      });\n\n      // color selectedNode last, because circular depdencies might\n      // have colored it already.\n      addNodeStyle(ss, selectedNodeId, {\n        color: nodeColors.selected,\n        size: 5,\n      });\n\n      // const sourceLinks = g.linksBySource[selectedNodeId] || [];\n      // sourceLinks.forEach((l) => {\n      //   addLinkStyle(ss, l.id, { particles: 7, color: linkColors.dependent });\n      // });\n      // const targetLinks = g.linksByTarget[selectedNodeId] || [];\n      // targetLinks.forEach((l) => {\n      //   addLinkStyle(ss, l.id, { particles: 7, color: linkColors.dependency });\n      // });\n    }\n\n    return ss;\n  }, [data, selectedNodeId, theme, graphConfig]);\n\n  // might be better to compute style objects for everything\n  // - and then just use these vars in the respective functions\n\n  useEffect(() => {\n    setTimeout(() => {\n      const r: any = ref.current;\n      r?.cameraPosition({ x: 0 }, { x: -200 });\n    }, 0);\n  }, []);\n\n  return (\n    <ForceGraph3D\n      ref={ref}\n      controlType=\"trackball\"\n      {...dimensions}\n      graphData={data.ds}\n      backgroundColor={theme.typography.backgroundColor}\n      nodeId=\"id\"\n      nodeVal={(node: any) => styles.nodes[node.id]?.size || 1}\n      nodeColor={(node: any) =>\n        styles.nodes[node.id]?.color || theme.graph.nodes.colors.standard\n      }\n      linkDirectionalParticles={(link: any) =>\n        styles.links[link.id]?.particles || 0\n      }\n      linkDirectionalArrowLength={3.5}\n      linkDirectionalArrowRelPos={1}\n      linkDirectionalArrowColor={(link: any) =>\n        styles.links[link.id]?.color || theme.graph.links.colors.standard\n      }\n      linkColor={(link: any) =>\n        styles.links[link.id]?.color || theme.graph.links.colors.standard\n      }\n      nodeLabel={(node) => (node as IGraphNode).label}\n      enableNodeDrag={false}\n      onNodeClick={(node) =>\n        setSelectedNodeId(selectedNodeId === node.id! ? null : `${node.id!}`)\n      }\n    />\n  );\n};\n","import { useLayoutEffect, useState } from \"react\";\n\ntype Dimensions = {\n  width: number;\n  height: number;\n};\n\nexport const useWindowSize = (): Dimensions => {\n  const [windowSize, setWindowSize] = useState<Dimensions>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useLayoutEffect(() => {\n    const handleResize = () => {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowSize;\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport tinycolor from \"tinycolor2\";\n\nexport type ButtonVariant =\n  | \"outlined\"\n  | \"contained\"\n  | \"standard\"\n  | \"none\"\n  | \"icon\"\n  | \"listItem\";\n\nexport type ButtonProps = {\n  disabled?: boolean;\n  onClick?: (ev: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  variant?: ButtonVariant;\n  selected?: boolean; // for list items\n  fullWidth?: boolean;\n  children?: React.ReactNode;\n  type?: \"button\" | \"submit\" | \"reset\";\n  onKeyDown?: (ev: React.KeyboardEvent<HTMLButtonElement>) => void;\n};\n\nconst StyledButton = styled(\"button\")<{\n  variant: ButtonVariant;\n  fullWidth?: boolean;\n  selected?: boolean;\n}>((p) => {\n  return {\n    borderWidth: 2,\n    padding: p.theme.spacing(0.5),\n    backgroundColor: \"transparent\",\n    color: \"inherit\",\n    borderStyle: \"solid\",\n    cursor: \"pointer\",\n    borderColor: \"transparent\",\n    font: \"inherit\",\n\n    \":focus\": {\n      outline: `1px dotted ${p.theme.hud.primaryColor}`,\n    },\n\n    \":disabled\": {\n      opacity: 0.5,\n      cursor: \"default\",\n    },\n\n    ...(p.variant === \"outlined\" && {\n      borderColor: \"currentcolor\",\n    }),\n\n    ...(p.variant === \"none\" && {\n      borderWidth: 0,\n      padding: 0,\n      textAlign: \"inherit\",\n    }),\n    ...(p.variant === \"icon\" && {\n      borderRadius: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      padding: 0,\n      textAlign: \"center\",\n    }),\n    ...(p.variant === \"listItem\" && {\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      padding: `${p.theme.spacing(0.5)}px ${p.theme.spacing(2)}px`,\n      backgroundColor: p.selected ? p.theme.hud.primaryColor : \"transparent\",\n\n      \":hover\": {\n        backgroundColor: p.selected\n          ? \"none\"\n          : tinycolor(p.theme.hud.primaryColor).lighten(10).toRgbString(),\n      },\n      \":disabled:hover\": {\n        backgroundColor: \"transparent\",\n      },\n\n      \"> :not(:first-child)\": {\n        marginLeft: p.theme.spacing(),\n      },\n    }),\n    ...(p.fullWidth && {\n      width: \"100%\",\n    }),\n  };\n});\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (props, ref) => {\n    return (\n      <StyledButton\n        ref={ref}\n        type=\"button\"\n        {...props}\n        variant={props.variant || \"standard\"}\n      />\n    );\n  }\n);\n","import { useMemo } from \"react\";\nimport { ExtendedKeyMapOptions, GlobalHotKeys } from \"react-hotkeys\";\nimport {\n  incrementGraphDependenciesMaxDepth,\n  incrementGraphDependentsMaxDepth,\n  toggleSidebar,\n  useConfig,\n} from \"../services/config\";\nimport { TabName, useUiState } from \"../services/uiState\";\nimport { Hotkey, HotkeyConfig } from \"../types/Config\";\n\ntype KeyMap = {\n  [K in Hotkey]: Omit<ExtendedKeyMapOptions, \"sequence\">; // erroneous type definition\n};\n\ntype KeyHandlers = {\n  [K in Hotkey]: (ev?: KeyboardEvent) => void;\n};\n\nconst toSequence = (\n  hotkeys: HotkeyConfig,\n  key: Hotkey\n): Omit<ExtendedKeyMapOptions, \"sequence\"> => {\n  return {\n    name: key,\n    sequences: hotkeys[key],\n    action: \"keydown\",\n  };\n};\n\nconst ALL_HOTKEYS: Hotkey[] = [\n  \"hud.sidebar.toggle\",\n  \"hud.sidebar.openNodesPanel\",\n  \"hud.sidebar.openHistoryPanel\",\n  \"hud.sidebar.openConfigPanel\",\n  \"hud.search\",\n  \"hud.hotkeyInfo\",\n  \"graph.dependencies.maxDepth.increase\",\n  \"graph.dependencies.maxDepth.decrease\",\n  \"graph.dependents.maxDepth.increase\",\n  \"graph.dependents.maxDepth.decrease\",\n  \"graph.selectedNode.exclude\",\n  \"graph.selectedNode.toggleDetails\",\n  \"graph.selectedNode.toggleSelection\",\n];\n\nconst toKeyMap = (hs: HotkeyConfig): KeyMap => {\n  return {\n    \"hud.sidebar.toggle\": toSequence(hs, \"hud.sidebar.toggle\"),\n    \"hud.sidebar.openNodesPanel\": toSequence(hs, \"hud.sidebar.openNodesPanel\"),\n    \"hud.sidebar.openHistoryPanel\": toSequence(\n      hs,\n      \"hud.sidebar.openHistoryPanel\"\n    ),\n    \"hud.sidebar.openConfigPanel\": toSequence(\n      hs,\n      \"hud.sidebar.openConfigPanel\"\n    ),\n    \"hud.search\": toSequence(hs, \"hud.search\"),\n    \"hud.hotkeyInfo\": toSequence(hs, \"hud.hotkeyInfo\"),\n    \"graph.dependencies.maxDepth.increase\": toSequence(\n      hs,\n      \"graph.dependencies.maxDepth.increase\"\n    ),\n    \"graph.dependencies.maxDepth.decrease\": toSequence(\n      hs,\n      \"graph.dependencies.maxDepth.decrease\"\n    ),\n    \"graph.dependents.maxDepth.increase\": toSequence(\n      hs,\n      \"graph.dependents.maxDepth.increase\"\n    ),\n    \"graph.dependents.maxDepth.decrease\": toSequence(\n      hs,\n      \"graph.dependents.maxDepth.decrease\"\n    ),\n    \"graph.selectedNode.exclude\": toSequence(hs, \"graph.selectedNode.exclude\"),\n    \"graph.selectedNode.toggleDetails\": toSequence(\n      hs,\n      \"graph.selectedNode.toggleDetails\"\n    ),\n    \"graph.selectedNode.toggleSelection\": toSequence(\n      hs,\n      \"graph.selectedNode.toggleSelection\"\n    ),\n    \"graph.selectedNode.history.backward\": toSequence(\n      hs,\n      \"graph.selectedNode.history.backward\"\n    ),\n    \"graph.selectedNode.history.forward\": toSequence(\n      hs,\n      \"graph.selectedNode.history.forward\"\n    ),\n  };\n};\n\nconst NOOP = (ev?: KeyboardEvent) => console.log(ev?.key);\n\nexport const Hotkeys = () => {\n  const [state, as] = useUiState();\n  const cfg = useConfig();\n  const {\n    current: { hotkeys },\n  } = cfg;\n  const keyMap = useMemo<KeyMap>(() => toKeyMap(hotkeys), [hotkeys]);\n  const handlers = useMemo<KeyHandlers>(() => {\n    const { current, onChange } = cfg;\n    const openSideBarTab = (t: TabName) => {\n      toggleSidebar(current, onChange, true);\n      as.setSidebarTab(t);\n    };\n    return {\n      \"hud.sidebar.toggle\": () => toggleSidebar(current, onChange),\n      \"hud.sidebar.openNodesPanel\": () => openSideBarTab(\"nodes\"),\n      \"hud.sidebar.openHistoryPanel\": () => openSideBarTab(\"history\"),\n      \"hud.sidebar.openConfigPanel\": () => openSideBarTab(\"config\"),\n      \"hud.search\": () => as.setSearchOpen(true),\n      \"hud.hotkeyInfo\": () => as.setHotkeyInfoOpen(true),\n      \"graph.dependencies.maxDepth.increase\": () =>\n        incrementGraphDependenciesMaxDepth(current, onChange, 1),\n      \"graph.dependencies.maxDepth.decrease\": () =>\n        incrementGraphDependenciesMaxDepth(current, onChange, -1),\n      \"graph.dependents.maxDepth.increase\": () =>\n        incrementGraphDependentsMaxDepth(current, onChange, 1),\n      \"graph.dependents.maxDepth.decrease\": () =>\n        incrementGraphDependentsMaxDepth(current, onChange, -1),\n      \"graph.selectedNode.exclude\": NOOP,\n      \"graph.selectedNode.toggleDetails\": () => as.toggleDetails(),\n      \"graph.selectedNode.toggleSelection\": () => as.toggleSelectedNodeId(),\n      \"graph.selectedNode.history.backward\": () => as.selectionHistoryMove(-1),\n      \"graph.selectedNode.history.forward\": () => as.selectionHistoryMove(1),\n    };\n  }, [cfg, state, as]);\n\n  return (\n    <GlobalHotKeys\n      keyMap={keyMap as any}\n      handlers={handlers}\n      allowChanges={true}\n    />\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const ConfigRow = styled(\"div\")<{ dense?: boolean }>((p) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n\n  \"> :not(:first-child)\": {\n    marginLeft: p.theme.spacing(p.dense ? 0.5 : 2),\n  },\n}));\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\n\nexport const OverlayContext = React.createContext<{\n  active: boolean;\n  setActive: (nextActive: boolean) => void;\n}>({\n  active: false,\n  setActive: () => undefined,\n});\n\nexport const OverlayContextProvider: React.FC = ({ children }) => {\n  const [active, setActive] = useState(false);\n  return (\n    <OverlayContext.Provider value={{ active, setActive }}>\n      {children}\n    </OverlayContext.Provider>\n  );\n};\n\nexport const useOverlayContext = () => {\n  const { active, setActive } = useContext(OverlayContext);\n  return [active, setActive] as const;\n};\n\nexport const usePopupState = (initialState: boolean = false) => {\n  const [open, _setOpen] = useState(initialState);\n  const { setActive } = useContext(OverlayContext);\n  useEffect(() => {\n    if (initialState) {\n      setActive(true);\n    }\n  }, []);\n  const setOpen = useCallback((nextOpen: boolean) => {\n    setActive(nextOpen);\n    _setOpen(nextOpen);\n  }, []);\n\n  return [open, setOpen] as const;\n};\n","import styled from \"@emotion/styled\";\nimport { useRef } from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { RefreshCcw } from \"react-feather\";\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\";\nimport { Button } from \"./Button\";\nimport { ConfigRow } from \"./ConfigRow\";\nimport { usePopupState } from \"./Hud/OverlayContext\";\n\nconst Container = styled(Button)((p) => ({\n  position: \"relative\",\n  display: \"block\",\n  width: \"100%\",\n}));\n\nconst ColorName = styled(\"div\")((p) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n\n  \"> :not(:first-child)\": {\n    marginLeft: p.theme.spacing(),\n  },\n}));\n\nconst ColorValue = styled(\"div\")`\n  font-family: monospace;\n`;\n\nconst Swatch = styled(\"div\")<{ value: string }>((p) => ({\n  width: p.theme.spacing(2),\n  height: p.theme.spacing(2),\n  backgroundColor: p.value,\n}));\n\nconst PickerContainer = styled(\"div\")((p) => ({\n  position: \"absolute\",\n  top: \"100%\",\n  right: 0,\n  zIndex: 5,\n}));\n\nexport const ColorPicker = ({\n  value,\n  defaultValue,\n  onChange,\n  label,\n}: {\n  label: React.ReactNode;\n  value: string;\n  defaultValue: string;\n  onChange: (nextValue: string) => void;\n}) => {\n  const [open, setOpen] = usePopupState(false);\n  const ref = useRef(null);\n  useOnClickOutside(ref, () => setOpen(false));\n\n  return (\n    <>\n      <Container\n        variant=\"standard\"\n        onClick={() => setOpen(true)}\n        onKeyDown={(ev) => {\n          if (ev.key === \"Escape\") {\n            setOpen(false);\n          }\n        }}\n      >\n        <ConfigRow>\n          <label>{label}</label>\n          <ColorName>\n            {value !== defaultValue && (\n              <Button\n                variant=\"icon\"\n                onClick={(ev) => {\n                  ev.stopPropagation();\n                  onChange(defaultValue);\n                }}\n              >\n                <RefreshCcw size={12} />\n              </Button>\n            )}\n            <Swatch value={value} />\n            <ColorValue>{value}</ColorValue>\n          </ColorName>\n        </ConfigRow>\n        {open && (\n          <PickerContainer ref={ref}>\n            <ChromePicker\n              color={value}\n              onChange={(nextColor) => {\n                onChange(nextColor.hex);\n              }}\n            />\n          </PickerContainer>\n        )}\n      </Container>\n    </>\n  );\n};\n","import { useEffect } from \"react\";\n\nexport const useOnClickOutside = (\n  ref: React.RefObject<any>,\n  handler: (ev: Event) => void\n) => {\n  useEffect(\n    () => {\n      const listener = (event: Event) => {\n        // Do nothing if clicking ref's element or descendent elements\n        if (!ref.current || ref.current.contains(event.target)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener(\"mousedown\", listener);\n      document.addEventListener(\"touchstart\", listener);\n\n      return () => {\n        document.removeEventListener(\"mousedown\", listener);\n        document.removeEventListener(\"touchstart\", listener);\n      };\n    },\n    // Add ref and handler to effect dependencies\n    // It's worth noting that because passed in handler is a new ...\n    // ... function on every render that will cause this effect ...\n    // ... callback/cleanup to run every render. It's not a big deal ...\n    // ... but to optimize you can wrap handler in useCallback before ...\n    // ... passing it into this hook.\n    [ref, handler]\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { useRef } from \"react\";\n\nexport const StyledInput = styled(\"input\")<{ fullWidth?: boolean }>((p) => ({\n  color: p.theme.hud.backgroundColor,\n  backgroundColor: p.theme.hud.color,\n  ...(p.fullWidth && {\n    width: \"100%\",\n  }),\n  boxSizing: \"border-box\",\n  font: p.theme.typography.font,\n}));\n\nexport type InputProps = React.DetailedHTMLProps<\n  React.InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n> & { blurOnEscape?: boolean; fullWidth?: boolean };\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ onKeyDown, blurOnEscape, ...p }, theirRef) => {\n    const ref = useRef<HTMLInputElement | null>();\n    const oKD = blurOnEscape\n      ? (ev: React.KeyboardEvent<HTMLInputElement>) => {\n          ev.key === \"Escape\" && ref.current?.blur();\n          onKeyDown && onKeyDown(ev);\n        }\n      : onKeyDown;\n    return (\n      <StyledInput\n        {...p}\n        ref={(r) => {\n          ref.current = r;\n          if (theirRef) {\n            if (typeof theirRef === \"function\") {\n              theirRef(r);\n            } else {\n              theirRef.current = r;\n            }\n          }\n        }}\n        onKeyDown={oKD}\n      />\n    );\n  }\n);\n\nconst SliderContainer = styled(\"div\")((p) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n\n  \"> :not(:last-child)\": {\n    marginRight: p.theme.spacing(0.5),\n  },\n}));\nexport const InputSliderWithValue = React.forwardRef<\n  HTMLInputElement,\n  Omit<InputProps, \"type\">\n>((p, ref) => {\n  return (\n    <SliderContainer>\n      <div>{p.value}</div>\n      <Input type=\"range\" {...p} ref={ref} />\n    </SliderContainer>\n  );\n});\n","import { useTheme } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport copy from \"copy-to-clipboard\";\nimport React, { useState } from \"react\";\nimport { Check, CheckCircle } from \"react-feather\";\nimport { useConfig } from \"../../services/config\";\nimport { GraphConfig, Theme } from \"../../types/Config\";\nimport { Button } from \"../Button\";\nimport { ColorPicker } from \"../ColorPicker\";\nimport { ConfigRow } from \"../ConfigRow\";\nimport { Input, InputSliderWithValue } from \"../Input\";\n\nconst Container = styled(\"div\")`\n  display: grid;\n  grid-template-rows: 1fr min-content;\n  grid-row-gap: ${(p) => p.theme.spacing()}px;\n  height: 100%;\n  grid-template-areas:\n    \"body\"\n    \"footer\";\n`;\n\nconst SubSection = styled(\"div\")((p) => ({\n  marginBottom: p.theme.spacing(2),\n}));\n\nconst ThemeSection = ({\n  value,\n  originalValue,\n  onChange,\n}: {\n  value: Theme;\n  originalValue: Theme;\n  onChange: (nextValue: Theme) => void;\n}) => {\n  return (\n    <section>\n      <h3>Theme</h3>\n      <SubSection>\n        <h4>General</h4>\n        <ColorPicker\n          label=\"Color\"\n          value={value.typography.color}\n          defaultValue={originalValue.typography.color}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              typography: {\n                ...value.typography,\n                color: nextColor,\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Bg Color\"\n          value={value.typography.backgroundColor}\n          defaultValue={originalValue.typography.backgroundColor}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              typography: {\n                ...value.typography,\n                backgroundColor: nextColor,\n              },\n            })\n          }\n        />\n      </SubSection>\n      <SubSection>\n        <h4>HUD</h4>\n        <ColorPicker\n          label=\"Color\"\n          value={value.hud.color}\n          defaultValue={originalValue.hud.color}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              hud: {\n                ...value.hud,\n                color: nextColor,\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Highlight Color\"\n          value={value.hud.primaryColor}\n          defaultValue={originalValue.hud.primaryColor}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              hud: {\n                ...value.hud,\n                primaryColor: nextColor,\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Bg Color\"\n          value={value.hud.backgroundColor}\n          defaultValue={originalValue.hud.backgroundColor}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              hud: {\n                ...value.hud,\n                backgroundColor: nextColor,\n              },\n            })\n          }\n        />\n      </SubSection>\n      <SubSection>\n        <h4>Graph Nodes</h4>\n        <ColorPicker\n          label=\"Standard\"\n          value={value.graph.nodes.colors.standard}\n          defaultValue={originalValue.graph.nodes.colors.standard}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                nodes: {\n                  ...value.graph.nodes,\n                  colors: {\n                    ...value.graph.nodes.colors,\n                    standard: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Selected\"\n          value={value.graph.nodes.colors.selected}\n          defaultValue={originalValue.graph.nodes.colors.selected}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                nodes: {\n                  ...value.graph.nodes,\n                  colors: {\n                    ...value.graph.nodes.colors,\n                    selected: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Unselected\"\n          value={value.graph.nodes.colors.unselected}\n          defaultValue={originalValue.graph.nodes.colors.unselected}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                nodes: {\n                  ...value.graph.nodes,\n                  colors: {\n                    ...value.graph.nodes.colors,\n                    unselected: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Dependency\"\n          value={value.graph.nodes.colors.dependency}\n          defaultValue={originalValue.graph.nodes.colors.dependency}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                nodes: {\n                  ...value.graph.nodes,\n                  colors: {\n                    ...value.graph.nodes.colors,\n                    dependency: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Dependent\"\n          value={value.graph.nodes.colors.dependent}\n          defaultValue={originalValue.graph.nodes.colors.dependent}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                nodes: {\n                  ...value.graph.nodes,\n                  colors: {\n                    ...value.graph.nodes.colors,\n                    dependent: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n      </SubSection>\n      <SubSection>\n        <h4>Graph Links</h4>\n        <ColorPicker\n          label=\"Standard\"\n          value={value.graph.links.colors.standard}\n          defaultValue={originalValue.graph.links.colors.standard}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                links: {\n                  ...value.graph.links,\n                  colors: {\n                    ...value.graph.links.colors,\n                    standard: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Unselected\"\n          value={value.graph.links.colors.unselected}\n          defaultValue={originalValue.graph.links.colors.unselected}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                links: {\n                  ...value.graph.links,\n                  colors: {\n                    ...value.graph.links.colors,\n                    unselected: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Dependency\"\n          value={value.graph.links.colors.dependency}\n          defaultValue={originalValue.graph.links.colors.dependency}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                links: {\n                  ...value.graph.links,\n                  colors: {\n                    ...value.graph.links.colors,\n                    dependency: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n        <ColorPicker\n          label=\"Dependent\"\n          value={value.graph.links.colors.dependent}\n          defaultValue={originalValue.graph.links.colors.dependent}\n          onChange={(nextColor) =>\n            onChange({\n              ...value,\n              graph: {\n                ...value.graph,\n                links: {\n                  ...value.graph.links,\n                  colors: {\n                    ...value.graph.links.colors,\n                    dependent: nextColor,\n                  },\n                },\n              },\n            })\n          }\n        />\n      </SubSection>\n    </section>\n  );\n};\n\nconst RegExpRow = ({\n  value,\n  onConfirm,\n}: {\n  value: RegExp | null;\n  onConfirm: (nextValue: RegExp | null) => void;\n}) => {\n  const originalValue = value ? value.toString().slice(1, -1) : \"\";\n  const [v, setV] = useState(originalValue);\n  const theme = useTheme();\n  return (\n    <ConfigRow\n      dense\n      as=\"form\"\n      onSubmit={(ev) => {\n        ev.stopPropagation();\n        ev.preventDefault();\n        if (v === originalValue) {\n          return;\n        }\n        onConfirm(v ? new RegExp(v) : null);\n      }}\n    >\n      <div>{\"/\"}</div>\n      <Input\n        fullWidth\n        value={v}\n        onChange={(ev) => setV(ev.target.value)}\n        blurOnEscape\n      />\n      <div>{\"/\"}</div>\n      <Button variant=\"icon\" disabled={v === originalValue} type=\"submit\">\n        {v === originalValue ? (\n          <Check size={14} />\n        ) : (\n          <CheckCircle size={14} color={theme.hud.primaryColor} />\n        )}\n      </Button>\n    </ConfigRow>\n  );\n};\n\nconst GraphSection = ({\n  value,\n  originalValue,\n  onChange,\n}: {\n  value: GraphConfig;\n  originalValue: GraphConfig;\n  onChange: (nextValue: GraphConfig) => void;\n}) => {\n  return (\n    <section>\n      <h3>Graph</h3>\n      <SubSection>\n        <h4>Include by path</h4>\n        <RegExpRow\n          value={value.includeByPath || null}\n          onConfirm={(includeByPath) =>\n            onChange({\n              ...value,\n              includeByPath,\n            })\n          }\n        />\n        <h4>Exclude by path</h4>\n        <RegExpRow\n          value={value.excludeByPath || null}\n          onConfirm={(excludeByPath) =>\n            onChange({\n              ...value,\n              excludeByPath,\n            })\n          }\n        />\n      </SubSection>\n      <SubSection>\n        <h4>Dependencies</h4>\n        <ConfigRow>\n          <div>Max Depth</div>\n          <InputSliderWithValue\n            min={0}\n            max={10}\n            value={value.dependencies.maxDepth}\n            blurOnEscape\n            onChange={(ev) =>\n              onChange({\n                ...value,\n                dependencies: {\n                  ...value.dependencies,\n                  maxDepth: parseInt(ev.target.value, 10),\n                },\n              })\n            }\n          />\n        </ConfigRow>\n      </SubSection>\n      <SubSection>\n        <h4>Dependents</h4>\n        <ConfigRow>\n          <div>Max Depth</div>\n          <InputSliderWithValue\n            min={0}\n            max={10}\n            value={value.dependents.maxDepth}\n            blurOnEscape\n            onChange={(ev) =>\n              onChange({\n                ...value,\n                dependents: {\n                  ...value.dependents,\n                  maxDepth: parseInt(ev.target.value, 10),\n                },\n              })\n            }\n          />\n        </ConfigRow>\n      </SubSection>\n    </section>\n  );\n};\n\nconst ControlsGrid = styled(\"div\")((p) => ({\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(2, 1fr)\",\n  gridColumnGap: p.theme.spacing(3),\n}));\n\nconst FooterContainer = styled(\"footer\")`\n  grid-area: footer;\n  padding: ${(p) => p.theme.spacing(2)}px;\n  border-top: 1px dashed currentcolor;\n`;\n\nconst Footer = () => {\n  const cfg = useConfig();\n  return (\n    <FooterContainer>\n      <ControlsGrid>\n        <Button\n          fullWidth\n          variant=\"outlined\"\n          onClick={() => cfg.onChange(cfg.original)}\n        >\n          Reset all\n        </Button>\n        <Button\n          fullWidth\n          variant=\"outlined\"\n          onClick={() => {\n            const json = JSON.stringify(cfg.current, null, 2);\n            console.log(json);\n            copy(json, {\n              format: \"text/plain\",\n            });\n          }}\n        >\n          Copy to Clipboard\n        </Button>\n      </ControlsGrid>\n    </FooterContainer>\n  );\n};\n\nconst Body = styled(\"div\")`\n  overflow: auto;\n  padding: 0 ${(p) => p.theme.spacing(2)}px;\n  grid-area: \"body\";\n\n  > :not(:first-child) {\n    margin-top: ${(p) => p.theme.spacing(4)}px;\n  }\n`;\n\nexport const ConfigPanel = () => {\n  const cfg = useConfig();\n  return (\n    <Container>\n      <Body>\n        <GraphSection\n          value={cfg.current.graph}\n          originalValue={cfg.original.graph}\n          onChange={(nextGraph) =>\n            cfg.onChange({\n              ...cfg.current,\n              graph: nextGraph,\n            })\n          }\n        />\n        <ThemeSection\n          value={cfg.current.theme}\n          originalValue={cfg.original.theme}\n          onChange={(nextTheme) =>\n            cfg.onChange({\n              ...cfg.current,\n              theme: nextTheme,\n            })\n          }\n        />\n      </Body>\n      <Footer />\n    </Container>\n  );\n};\n","import { useTheme } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport tinycolor from \"tinycolor2\";\nimport { TreeNode } from \"../types/GraphData\";\n\nconst Container = styled(\"div\")((p) => ({\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(2, 1fr)\",\n  gridColumnGap: p.theme.spacing(0.5),\n  color: p.theme.hud.color,\n}));\n\nconst Pill = styled(\"div\")<{ color: string }>((p) => {\n  return {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 0,\n    backgroundColor: tinycolor(p.color).setAlpha(0.7).toHexString(),\n    minWidth: p.theme.spacing(2),\n    padding: `0 ${p.theme.spacing(0.25)}px`,\n  };\n});\n\nexport const NodeStats = ({ d }: { d: TreeNode }) => {\n  const theme = useTheme();\n  return (\n    <Container>\n      <Pill color={theme.graph.nodes.colors.dependent}>\n        {d.exclude\n          ? d.dependsOn.nodes.length\n          : d.dependsOn.countWithoutExcluded}\n      </Pill>\n      <Pill color={theme.graph.nodes.colors.dependency}>\n        {d.exclude\n          ? d.dependedBy.nodes.length\n          : d.dependedBy.countWithoutExcluded}\n      </Pill>\n    </Container>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const HudSegment = styled(\"div\")`\n  box-sizing: border-box;\n  overflow: auto;\n  pointer-events: auto;\n  color: ${(p) => p.theme.hud.color};\n  opacity: ${(p) => p.theme.hud.opacity};\n`;\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { useUiState } from \"../../services/uiState\";\nimport { TreeNode } from \"../../types/GraphData\";\nimport { NodeStats } from \"../NodeStats\";\nimport { HudSegment } from \"./HudSegment\";\n\nconst Container = styled(HudSegment)((p) => ({\n  position: \"absolute\",\n  width: \"100%\",\n  top: 0,\n  left: 0,\n  padding: p.theme.spacing(3),\n}));\n\nconst Title = styled(\"div\")<{ excluded: boolean }>((p) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  fontSize: \"1.17rem\",\n  opacity: p.excluded ? 0.2 : \"inherit\",\n\n  \"> :not(:first-child)\": {\n    marginLeft: p.theme.spacing(),\n  },\n}));\n\nconst DetailsContainer = styled(\"div\")((p) => ({\n  paddingTop: p.theme.spacing(3),\n  paddingBottom: p.theme.spacing(3),\n  paddingRight: p.theme.spacing(3),\n}));\n\nconst Tbd = styled(\"div\")((p) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: 300,\n}));\n\nconst Details = ({ d }: { d: TreeNode }) => {\n  return (\n    <DetailsContainer>\n      <Tbd>Details coming soon!</Tbd>\n    </DetailsContainer>\n  );\n};\n\nexport const CurrentSelection = () => {\n  const [\n    {\n      graph: { data, selectedNodeId, showDetails },\n    },\n  ] = useUiState();\n  if (!selectedNodeId) {\n    return null;\n  }\n  const d = data.byId[selectedNodeId];\n  if (!d) {\n    console.log(\"Node not found\", selectedNodeId, data.byId);\n    return null;\n  }\n  return (\n    <Container>\n      <Title excluded={d.exclude}>\n        <div>{d.exclude ? <s>{d.label}</s> : d.label}</div>\n        <NodeStats d={d} />\n      </Title>\n      {showDetails && <Details d={d} />}\n    </Container>\n  );\n};\n","import { useCallback, useLayoutEffect, useRef, useState } from \"react\";\n\ninterface ILoadingValue<T> {\n  loading: boolean;\n  error?: any;\n  value?: T;\n}\nexport const useLoadingValue = <T>(initialValue?: T, initialLoading = true) => {\n  const toInitialState = () => ({\n    loading: initialLoading,\n    error: undefined,\n    value: initialValue,\n  });\n  const [{ loading, error, value }, setState] = useState<ILoadingValue<T>>(\n    toInitialState()\n  );\n\n  const setLoading = (nextLoading: boolean) =>\n    setState({ loading: nextLoading, value, error });\n  const setValue = (nextValue: T) =>\n    setState({ loading: false, value: nextValue, error: undefined });\n  const setError = (nextError: any) =>\n    setState({ loading: false, value: undefined, error: nextError });\n  const reset = () => setState(toInitialState());\n\n  return { loading, error, value, setLoading, setValue, setError, reset };\n};\n\nexport const usePromise = <T>(\n  fn: () => Promise<T>,\n  listeners: any[] = []\n): [void | T, boolean, any, () => void] => {\n  // rev updates everytime a new value is requested.\n  // allows as to make sure, that only the latest call is used\n  // to update the value, avoiding potential race conditions, where\n  // call A might return after call B and hence override the already\n  // set value coming from B\n  const [rev, setRev] = useState(0);\n  const ref = useRef(0);\n  const {\n    value,\n    error,\n    loading,\n    setLoading,\n    setValue,\n    setError,\n  } = useLoadingValue<T>();\n\n  const forceReload = useCallback(() => setRev((prev) => prev + 1), []);\n\n  // useLayout effect, because if we want to go to another loading\n  // state, the old value should not be flushed to them DOM!\n  useLayoutEffect(() => {\n    if (!loading) {\n      setLoading(true);\n    }\n    const v = ++ref.current;\n    fn().then(\n      (val) => {\n        if (v === ref.current) {\n          setValue(val);\n        }\n      },\n      (err) => {\n        if (v === ref.current) {\n          setError(err);\n        }\n      }\n    );\n    // eslint-disable-next-line\n  }, [...listeners, rev]);\n\n  return [value, loading, error, forceReload];\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { usePromise } from \"../hooks/usePromise\";\nimport { Config } from \"../types/Config\";\nimport { DependencyNode } from \"../types/DependencyAnalyzer\";\n\nexport type Dataset = {\n  name: string;\n  fetch: () => Promise<{\n    config: Config;\n    data: DependencyNode[];\n  }>;\n};\n\ntype LoadingState = {\n  state: \"LOADING\";\n  name: string;\n};\n\ntype ErrorState = {\n  name: string;\n  state: \"ERROR\";\n  err: any;\n};\n\ntype ReadyState = {\n  name: string;\n  state: \"READY\";\n  config: Config;\n  data: DependencyNode[];\n};\n\ntype State = LoadingState | ErrorState | ReadyState;\n\nconst DATASET_CACHE: {\n  [key: string]: {\n    config: Config;\n    data: DependencyNode[];\n  };\n} = {};\n\nconst useResolveDataset = (dataset: Dataset) => {\n  return usePromise(\n    async () =>\n      (DATASET_CACHE[dataset.name] =\n        DATASET_CACHE[dataset.name] || (await dataset.fetch())),\n    [dataset]\n  );\n};\n\nexport const Datasets = React.createContext<{\n  datasets: Dataset[];\n  current: State;\n  selectDataset: (nextDataset: Dataset) => void;\n}>({\n  datasets: [],\n  current: {\n    name: \"...\",\n    state: \"LOADING\",\n  },\n  selectDataset: () => undefined,\n});\n\nexport const DatasetProvider: React.FC<{ datasets: Dataset[] }> = ({\n  datasets,\n  children,\n}) => {\n  const [dataset, selectDataset] = useState<Dataset>(datasets[0]);\n  const [state, setState] = useState<State>({\n    name: dataset.name,\n    state: \"LOADING\",\n  });\n  const [d, loading, error] = useResolveDataset(dataset);\n\n  useEffect(() => {\n    setState(() => {\n      if (loading) {\n        return { name: dataset.name, state: \"LOADING\" };\n      }\n      if (error) {\n        return {\n          name: dataset.name,\n          state: \"ERROR\",\n          err: error.message || \"UNKNOWN\",\n        };\n      }\n      if (d) {\n        return {\n          name: dataset.name,\n          state: \"READY\",\n          config: d.config,\n          data: d.data,\n        };\n      }\n      return { name: dataset.name, state: \"ERROR\", err: \"UNKNOWN\" };\n    });\n  }, [d, loading, error, dataset]);\n\n  return (\n    <Datasets.Provider value={{ current: state, datasets, selectDataset }}>\n      {children}\n    </Datasets.Provider>\n  );\n};\n\nexport const useDatasets = () => useContext(Datasets);\n","import styled from \"@emotion/styled\";\n\nexport const Select = styled(\"select\")((p) => ({\n  color: p.theme.hud.color,\n  backgroundColor: \"transparent\",\n  border: \"none\",\n  font: p.theme.typography.font,\n\n  option: {\n    font: p.theme.typography.font,\n    color: p.theme.hud.color,\n    backgroundColor: p.theme.hud.backgroundColor,\n  },\n}));\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { useDatasets } from \"../../services/dataset\";\nimport { Select } from \"../Select\";\nimport { HudSegment } from \"./HudSegment\";\n\nconst Container = styled(HudSegment)((p) => ({\n  position: \"absolute\",\n  top: 0,\n  right: 0,\n  padding: p.theme.spacing(2),\n}));\n\nexport const DatasetExplorer = () => {\n  const { current, datasets, selectDataset } = useDatasets();\n  if (datasets.length < 2) {\n    return null;\n  }\n  return (\n    <Container>\n      <Select\n        value={current.name}\n        onChange={(ev) => {\n          const dataset = datasets.find((x) => x.name === ev.target.value);\n          dataset && selectDataset(dataset);\n        }}\n      >\n        {datasets.map((d) => (\n          <option key={d.name} value={d.name}>\n            {d.name}\n          </option>\n        ))}\n      </Select>\n    </Container>\n  );\n};\n","export const scrollElementIntoView = (\n  container: HTMLElement,\n  element: HTMLElement\n) => {\n  const o = container.getBoundingClientRect();\n  const i = element.getBoundingClientRect();\n  if (\n    o.top <= i.top &&\n    o.left <= i.left &&\n    o.bottom >= i.bottom &&\n    o.right >= i.right\n  ) {\n    // element is fully visible\n    return;\n  }\n  let yDiff = 0;\n  if (o.top >= i.top) {\n    // need to go up\n    yDiff = i.top - o.top;\n  }\n  if (o.bottom <= i.bottom) {\n    // need to go down\n    yDiff = i.bottom - o.bottom;\n  }\n  container.scrollBy(0, yDiff);\n};\n","import styled from \"@emotion/styled\";\nimport React, { useEffect, useRef } from \"react\";\nimport { scrollElementIntoView } from \"../../services/scroll\";\nimport { useUiState } from \"../../services/uiState\";\nimport { TreeNode } from \"../../types/GraphData\";\nimport { Button } from \"../Button\";\nimport { NodeStats } from \"../NodeStats\";\n\nconst List = styled(\"div\")((p) => ({}));\n\nconst Item = React.forwardRef<\n  HTMLButtonElement,\n  {\n    t: TreeNode;\n    selected?: boolean;\n    onClick: () => void;\n  }\n>(({ t, selected, onClick }, ref) => {\n  return (\n    <Button\n      ref={ref}\n      selected={selected}\n      disabled={t.exclude}\n      variant=\"listItem\"\n      fullWidth\n      onClick={() => {\n        !t.exclude && onClick();\n      }}\n    >\n      {t.exclude ? <s>{t.label}</s> : <span>{t.label}</span>}\n      <NodeStats d={t} />\n    </Button>\n  );\n});\n\nconst EmptyState = styled(\"div\")((p) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  height: 200,\n  opacity: 0.5,\n}));\n\nexport const HistoryPanel = ({\n  scrollContainer,\n}: {\n  scrollContainer: HTMLElement | null;\n}) => {\n  const [\n    {\n      graph: { data, history, selectedNodeId },\n    },\n    { toggleSelectedNodeId, selectionHistoryMove },\n  ] = useUiState();\n  const { future, present, past } = history.getHistory();\n  const presentT = present && data.byId[present];\n  const selectionRef = useRef<HTMLButtonElement>(null);\n\n  useEffect(() => {\n    if (selectedNodeId && scrollContainer && selectionRef.current) {\n      scrollElementIntoView(scrollContainer, selectionRef.current);\n    }\n  }, [selectedNodeId]);\n  return (\n    <List>\n      {past.map((id, i) => {\n        const t = data.byId[id];\n        return (\n          t && (\n            <Item\n              key={`${id}-${i}`}\n              t={t}\n              onClick={() => selectionHistoryMove(-(past.length - i))}\n            />\n          )\n        );\n      })}\n      {presentT && (\n        <Item\n          key={presentT.id}\n          t={presentT}\n          selected={true}\n          ref={selectionRef}\n          onClick={() => toggleSelectedNodeId()}\n        />\n      )}\n      {future.map((id, i) => {\n        const t = data.byId[id];\n        return (\n          t && (\n            <Item\n              key={`${id}-${i}`}\n              t={t}\n              onClick={() => selectionHistoryMove(i + 1)}\n            />\n          )\n        );\n      })}\n      <></>\n      {!present && !future.length && !past.length && (\n        <EmptyState>\n          <em>No selections recorded yet.</em>\n        </EmptyState>\n      )}\n    </List>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const CssBaseline = styled(\"div\")((p) => ({\n  font: p.theme.typography.font,\n\n  h4: {\n    marginTop: p.theme.spacing(),\n    marginBottom: p.theme.spacing(),\n  },\n\n  h5: {\n    marginTop: p.theme.spacing(),\n    marginBottom: p.theme.spacing(),\n  },\n\n  \"*\": {\n    scrollbarWidth: \"thin\",\n    scrollbarColor: `${p.theme.hud.backgroundColor} lightgray`,\n\n    \"::-webkit-scrollbar\": {\n      width: p.theme.spacing(0.5),\n      height: p.theme.spacing(0.5),\n    },\n\n    \"::-webkit-scrollbar-track\": {\n      background: p.theme.hud.backgroundColor,\n      border: `1px solid ${p.theme.hud.backgroundColor}`,\n      opacity: p.theme.hud.opacity,\n    },\n    \"::-webkit-scrollbar-thumb\": {\n      borderRadius: 2,\n      background: \"lightgray\",\n    },\n    \"::-webkit-scrollbar-corner\": {\n      background: p.theme.hud.backgroundColor,\n      opacity: p.theme.hud.opacity,\n    },\n  },\n}));\n","import { useTheme } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { useMemo } from \"react\";\nimport ReactModal from \"react-modal\";\nimport tinycolor from \"tinycolor2\";\nimport { CssBaseline } from \"../CssBaseline\";\n\nReactModal.setAppElement(\"#root\");\n\nexport const DialogTitle = styled(\"h3\")`\n  margin-top: 0;\n`;\n\nconst DialogBody = styled(CssBaseline)((p) => ({}));\n\nexport const Dialog: React.FC<{\n  open: boolean;\n  onClose: () => void;\n  width?: string | number;\n  center?: boolean;\n  overflow?: React.CSSProperties[\"overflow\"];\n  variant?: \"standard\" | \"plain\";\n}> = ({\n  open,\n  onClose,\n  width,\n  center,\n  overflow,\n  children,\n  variant = \"standard\",\n}) => {\n  const theme = useTheme();\n  const style = useMemo(() => {\n    const s: ReactModal.Styles = {\n      overlay: {\n        zIndex: 10,\n        backgroundColor: tinycolor(theme.typography.backgroundColor)\n          .setAlpha(0.7)\n          .toRgbString(),\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: center ? \"center\" : \"flex-start\",\n      },\n      content: {\n        position: \"relative\",\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        padding: variant === \"plain\" ? 0 : theme.spacing(3),\n        marginTop: center ? 0 : theme.spacing(8),\n        backgroundColor:\n          variant === \"plain\" ? \"transparent\" : theme.hud.backgroundColor,\n        border: variant === \"plain\" ? \"none\" : \"1px solid currentcolor\",\n        color: theme.hud.color,\n        width: width || \"auto\",\n        font: theme.typography.color,\n        overflow: overflow || \"auto\",\n        opacity: theme.hud.opacity,\n      },\n    };\n    return s;\n  }, [theme, width, center, overflow, variant]);\n  return (\n    <ReactModal style={style} isOpen={open} onRequestClose={onClose}>\n      <DialogBody>{children}</DialogBody>\n    </ReactModal>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { getApplicationKeyMap, KeyMapDisplayOptions } from \"react-hotkeys\";\nimport { useUiState } from \"../../services/uiState\";\nimport { Dialog, DialogTitle } from \"../Dialog\";\n\nconst HotkeyGrid = styled(\"div\")((p) => ({\n  display: \"grid\",\n  gridTemplateColumns: \"1fr max-content\",\n  gridColumnGap: p.theme.spacing(4),\n  gridRowGap: p.theme.spacing(1),\n}));\n\nconst HotkeyValues = styled(\"div\")`\n  text-align: right;\n`;\n\nconst HotkeyValue = styled(\"span\")`\n  font-family: monospace;\n`;\n\nconst HotkeyRow = ({ h }: { h: KeyMapDisplayOptions }) => {\n  return (\n    <>\n      <div>{h.name}</div>\n      <HotkeyValues>\n        {h.sequences.map((s, i) => (\n          <React.Fragment key={i}>\n            {i !== 0 && <span> or </span>}\n            <HotkeyValue>{s.sequence}</HotkeyValue>\n          </React.Fragment>\n        ))}\n      </HotkeyValues>\n    </>\n  );\n};\n\nexport const HotkeyInfoModal = () => {\n  const [\n    {\n      hud: {\n        hotkeyInfo: { open: hotkeyInfoOpen },\n      },\n    },\n    { setHotkeyInfoOpen },\n  ] = useUiState();\n  const close = () => setHotkeyInfoOpen(false);\n  const hotkeys = getApplicationKeyMap();\n  return (\n    <Dialog open={hotkeyInfoOpen} onClose={close} center>\n      <DialogTitle>Hotkeys</DialogTitle>\n\n      <HotkeyGrid>\n        {Object.entries(hotkeys).map(([id, h]) => (\n          <HotkeyRow key={id} h={h} />\n        ))}\n      </HotkeyGrid>\n    </Dialog>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\ntype OptionalRect = {\n  top?: number;\n  left?: number;\n  right?: number;\n  bottom?: number;\n};\n\nexport const isElementInViewport = (\n  el: Element,\n  thresholds: OptionalRect = {}\n) => {\n  const {\n    top: elTop,\n    left: elLeft,\n    bottom: elBottom,\n    right: elRight,\n  } = el.getBoundingClientRect();\n\n  const { top = 0, left = 0, bottom = 0, right = 0 } = thresholds;\n\n  const vpTop = 0 + top;\n  const vpLeft = 0 + left;\n  const vpBottom =\n    (window.innerHeight || document.documentElement.clientHeight) - bottom;\n  const vpRight =\n    (window.innerWidth || document.documentElement.clientWidth) - right;\n\n  return (\n    elTop >= vpTop &&\n    elLeft >= vpLeft &&\n    elBottom <= vpBottom &&\n    elRight <= vpRight\n  );\n};\n\n// TODO also allow to define an offset for when an element is considered\n// to be in the viewport.\nexport const useScrollIntoView = <T extends Element = Element>(\n  active: boolean,\n  options: ScrollIntoViewOptions = {},\n  thresholds: OptionalRect = {}\n) => {\n  const ref = useRef<T>(null!);\n  const { behavior, block, inline } = options;\n  const { top, left, right, bottom } = thresholds;\n  useEffect(() => {\n    if (\n      ref.current &&\n      active &&\n      !isElementInViewport(ref.current, { top, left, right, bottom })\n    ) {\n      ref.current.scrollIntoView({\n        behavior,\n        block,\n        inline,\n      });\n    }\n  }, [active, behavior, block, inline, top, left, right, bottom]);\n\n  return ref;\n};\n","import React, { SVGProps } from \"react\";\n\nexport const MinusSquareO = (props: SVGProps<SVGSVGElement>) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 347h-442q-14 0 -25 10.5t-11 25.5v0q0 15 11 25.5t25 10.5h442q14 0 25 -10.5t11 -25.5v0\n  q0 -15 -11 -25.5t-25 -10.5z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const PlusSquareO = (props: SVGProps<SVGSVGElement>) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0zM732 420h-184v183q0 15 -10.5 25.5t-25.5 10.5v0q-14 0 -25 -10.5t-11 -25.5v-183h-184\n  q-15 0 -25.5 -11t-10.5 -25v0q0 -15 10.5 -25.5t25.5 -10.5h184v-183q0 -15 11 -25.5t25 -10.5v0q15 0 25.5 10.5t10.5 25.5v183h184q15 0 25.5 10.5t10.5 25.5v0q0 14 -10.5 25t-25.5 11z\"\n      />\n    </g>\n  </svg>\n);\n\nexport const CloseSquareO = (props: SVGProps<SVGSVGElement>) => (\n  <svg {...props} viewBox=\"64 -65 897 897\">\n    <g>\n      <path\n        d=\"M717.5 589.5q-10.5 10.5 -25.5 10.5t-26 -10l-154 -155l-154 155q-11 10 -26 10t-25.5 -10.5t-10.5 -25.5t11 -25l154 -155l-154 -155q-11 -10 -11 -25t10.5 -25.5t25.5 -10.5t26 10l154 155l154 -155q11 -10 26 -10t25.5 10.5t10.5 25t-11 25.5l-154 155l154 155\n  q11 10 11 25t-10.5 25.5zM888 760v0v0v-753v0h-752v0v753v0h752zM888 832h-752q-30 0 -51 -21t-21 -51v-753q0 -29 21 -50.5t51 -21.5h753q29 0 50.5 21.5t21.5 50.5v753q0 30 -21.5 51t-51.5 21v0z\"\n      />\n    </g>\n  </svg>\n);\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport tinycolor from \"tinycolor2\";\nimport { useScrollIntoView } from \"../../hooks/useScrollIntoView\";\nimport { TreeNode } from \"../../types/GraphData\";\nimport { Button } from \"../Button\";\nimport { NodeStats } from \"../NodeStats\";\nimport * as Icons from \"./icons\";\n\ntype FileTreeItemFile<T> = {\n  key: string;\n  type: \"file\";\n  label: React.ReactNode;\n  data: T;\n};\n\ntype FileTreeItemDir<T> = {\n  key: string;\n  type: \"dir\";\n  label: React.ReactNode;\n  dirs: FileTreeItemDir<T>[];\n  files: FileTreeItemFile<T>[];\n};\n\ntype FileTreeItem<T> = FileTreeItemDir<T> | FileTreeItemFile<T>;\n\nexport const SEPARATOR = \"/\";\n\nexport const toFileTree = (ds: TreeNode[]): FileTreeItemDir<TreeNode> => {\n  const items: { [path: string]: FileTreeItemDir<TreeNode> } = {\n    [SEPARATOR]: {\n      type: \"dir\",\n      key: SEPARATOR,\n      label: SEPARATOR,\n      dirs: [],\n      files: [],\n    },\n  };\n  ds.forEach((d) => {\n    const { path } = d;\n    const parts = path.split(SEPARATOR);\n    const file = parts.pop();\n    let lastDir: FileTreeItemDir<TreeNode> = items[SEPARATOR];\n    for (let i = 0; i < parts.length; i++) {\n      const dirPath = parts.slice(0, i + 1).join(SEPARATOR);\n      if (!items[dirPath]) {\n        items[dirPath] = {\n          type: \"dir\",\n          key: dirPath,\n          label: parts[i],\n          dirs: [],\n          files: [],\n        };\n        const parentDirPath = parts.slice(0, i).join(SEPARATOR) || SEPARATOR;\n        items[parentDirPath].dirs.push(items[dirPath]);\n      }\n      lastDir = items[dirPath];\n    }\n    lastDir.files.push({\n      type: \"file\",\n      key: path,\n      label: file,\n      data: d,\n    });\n  });\n  return items[SEPARATOR];\n};\n\nconst Frame = styled(\"div\")<{ selected: boolean }>`\n  position: relative;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow-x: hidden;\n  vertical-align: middle;\n  fill: ${(p) => p.theme.hud.color};\n`;\n\nconst Title = styled(\"span\")`\n  vertical-align: middle;\n`;\n\nconst Content = styled(\"div\")`\n  margin-left: 6px;\n  padding: 0px 0px 0px 14px;\n  border-left: 1px dashed rgba(255, 255, 255, 0.4);\n  overflow: hidden;\n`;\n\nconst toggle: React.CSSProperties = {\n  width: \"1em\",\n  height: \"1em\",\n  marginRight: 10,\n  cursor: \"pointer\",\n  verticalAlign: \"middle\",\n};\n\nconst Row = styled(\"div\")<{\n  selected?: boolean;\n  excluded?: boolean;\n  clickable?: boolean;\n}>((p) => ({\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n\n  padding: [p.theme.spacing(0.25), p.theme.spacing(2), p.theme.spacing(0.25), 0]\n    .map((x) => `${x}px`)\n    .join(\" \"),\n  opacity: p.excluded ? 0.5 : 1,\n\n  \"> :not(:first-child)\": {\n    marginLeft: p.theme.spacing(),\n  },\n\n  backgroundColor: p.selected ? p.theme.hud.primaryColor : \"none\",\n\n  \":hover\": {\n    backgroundColor:\n      p.selected || p.excluded || !p.clickable\n        ? \"none\"\n        : tinycolor(p.theme.hud.primaryColor).lighten(10).toRgbString(),\n  },\n}));\n\nconst Tree = React.memo(\n  ({\n    children,\n    label,\n    isOpen,\n    setOpen,\n    onClick,\n    isSelected,\n    rightSlot,\n    excluded,\n  }: {\n    label: React.ReactNode;\n    isOpen: boolean;\n    setOpen: (nextOpen: boolean) => void;\n    children?: React.ReactNode;\n    onClick?: () => void;\n    isSelected: boolean;\n    rightSlot?: React.ReactNode;\n    excluded?: boolean;\n  }) => {\n    const ref = useScrollIntoView<HTMLDivElement>(isSelected, {\n      behavior: \"smooth\",\n    });\n    const Icon = (Icons as any)[\n      `${children ? (isOpen ? \"Minus\" : \"Plus\") : \"Close\"}SquareO`\n    ];\n    return (\n      <Frame ref={ref} selected={isSelected}>\n        <Row excluded={excluded} selected={isSelected} clickable={!!onClick}>\n          <div>\n            <Icon\n              style={{ ...toggle, opacity: children ? 1 : 0.3 }}\n              onClick={() => setOpen(!isOpen)}\n            />\n            <Title>\n              {onClick && !excluded ? (\n                <Button variant=\"none\" onClick={onClick}>\n                  {label}\n                </Button>\n              ) : excluded ? (\n                <s>{label}</s>\n              ) : (\n                label\n              )}\n            </Title>\n          </div>\n          <div>{rightSlot}</div>\n        </Row>\n        {isOpen && <Content>{children}</Content>}\n      </Frame>\n    );\n  }\n);\n\nexport const FileTreeDirectoryContent = ({\n  dir,\n  onSelect,\n  openNodes,\n  setOpenNodes,\n  selectedItemKey,\n}: {\n  dir: FileTreeItemDir<TreeNode>;\n  onSelect: (t: TreeNode) => void;\n\n  openNodes: { [key: string]: boolean };\n  setOpenNodes: (nextV: { [key: string]: boolean }) => void;\n\n  selectedItemKey: string | null;\n}) => {\n  return (\n    <>\n      {dir.dirs.map((d) => (\n        <FileTree\n          key={d.key}\n          item={d}\n          onSelect={onSelect}\n          openNodes={openNodes}\n          setOpenNodes={setOpenNodes}\n          selectedItemKey={selectedItemKey}\n        />\n      ))}\n      {dir.files.map((d) => (\n        <FileTree\n          key={d.key}\n          item={d}\n          onSelect={onSelect}\n          openNodes={openNodes}\n          setOpenNodes={setOpenNodes}\n          selectedItemKey={selectedItemKey}\n        />\n      ))}\n    </>\n  );\n};\n\nexport const FileTree = ({\n  item,\n  onSelect,\n  openNodes,\n  setOpenNodes,\n  selectedItemKey,\n}: {\n  item: FileTreeItem<TreeNode>;\n  onSelect: (t: TreeNode) => void;\n\n  openNodes: { [key: string]: boolean };\n  setOpenNodes: (nextV: { [key: string]: boolean }) => void;\n  selectedItemKey: string | null;\n}): JSX.Element => {\n  const isOpen = !!openNodes[item.key];\n  const setOpen = (open: boolean) =>\n    setOpenNodes({\n      ...openNodes,\n      [item.key]: open,\n    });\n  if (item.type === \"dir\") {\n    // Mark with strikethrough when all children are excluded\n    return (\n      <Tree\n        label={item.label}\n        isOpen={isOpen}\n        setOpen={setOpen}\n        isSelected={item.key === selectedItemKey}\n      >\n        <FileTreeDirectoryContent\n          dir={item}\n          onSelect={onSelect}\n          openNodes={openNodes}\n          setOpenNodes={setOpenNodes}\n          selectedItemKey={selectedItemKey}\n        />\n      </Tree>\n    );\n  }\n  const d = item.data;\n  // excluded nodes show their full count - to get a sense for how many connections\n  // are excluded by excluding this node\n  // active nodes show their count without them\n  return (\n    <Tree\n      label={item.label}\n      onClick={() => onSelect(d)}\n      isOpen={isOpen}\n      setOpen={setOpen}\n      isSelected={item.key === selectedItemKey}\n      excluded={d.exclude}\n      rightSlot={<NodeStats d={d} />}\n    />\n  );\n};\n","import styled from \"@emotion/styled\";\nimport { sortBy } from \"lodash\";\nimport React, { SetStateAction, useLayoutEffect, useMemo } from \"react\";\nimport { GraphData } from \"../../types/GraphData\";\nimport { FileTreeDirectoryContent, SEPARATOR, toFileTree } from \"../FileTree\";\n\nconst Container = styled(\"div\")`\n  padding-left: ${(p) => p.theme.spacing(2)}px;\n`;\n\nexport const NodesPanel = ({\n  g,\n  selectedNodeId,\n  setSelectedNodeId,\n  openNodes,\n  setOpenNodes,\n}: {\n  g: GraphData;\n  selectedNodeId: string | null;\n  setSelectedNodeId: (v: string | null) => void;\n  openNodes: { [key: string]: boolean };\n  setOpenNodes: React.Dispatch<SetStateAction<{ [key: string]: boolean }>>;\n}) => {\n  const { rootDir } = useMemo(() => {\n    return {\n      rootDir: toFileTree(sortBy(g.list, (n) => n.path)),\n    };\n  }, [g]);\n\n  useLayoutEffect(() => {\n    if (selectedNodeId) {\n      const treeNode = g.byId[selectedNodeId];\n      if (!treeNode) {\n        return;\n      }\n      const { path } = treeNode;\n      const parts = path.split(SEPARATOR);\n      const toOpen: { [key: string]: boolean } = {};\n      for (let i = 0; i < parts.length; i++) {\n        const key = parts.slice(0, i + 1).join(SEPARATOR);\n        toOpen[key] = true;\n      }\n      setOpenNodes((x) => ({ ...x, ...toOpen }));\n    }\n  }, [selectedNodeId, g, setOpenNodes]);\n\n  const selectedItemKey = selectedNodeId\n    ? g.byId[selectedNodeId]?.path || null\n    : null;\n\n  return (\n    <Container>\n      <FileTreeDirectoryContent\n        dir={rootDir}\n        onSelect={(t) => {\n          if (t.exclude) {\n            return;\n          }\n          const nodeId = t.id;\n          return setSelectedNodeId(selectedNodeId === nodeId ? null : nodeId);\n        }}\n        openNodes={openNodes}\n        setOpenNodes={setOpenNodes}\n        selectedItemKey={selectedItemKey}\n      />\n    </Container>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport fuzzysort from \"fuzzysort\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Eye, EyeOff, Settings } from \"react-feather\";\nimport tinycolor from \"tinycolor2\";\nimport { toggleShowExcludedNodes, useConfig } from \"../../services/config\";\nimport { scrollElementIntoView } from \"../../services/scroll\";\nimport { useUiState } from \"../../services/uiState\";\nimport { TreeNode } from \"../../types/GraphData\";\nimport { Button } from \"../Button\";\nimport { Dialog } from \"../Dialog\";\nimport { Input } from \"../Input\";\nimport { NodeStats } from \"../NodeStats\";\n\nconst CustomInput = styled(Input)((p) => {\n  return {\n    fontSize: \"1.33rem\",\n    color: p.theme.hud.color,\n    backgroundColor: p.theme.hud.backgroundColor,\n    padding: p.theme.spacing(2),\n    border: \"none\",\n    outline: \"none\",\n\n    \":focus\": {\n      border: \"none\",\n      outline: \"none\",\n    },\n  };\n});\n\n// Maybe do ellipsis inside for ultra long names?\nconst EmptyListItem = styled(Button)`\n  font-style: italic;\n`;\n\nconst ListContainer = styled(\"div\")((p) => ({\n  borderTop: \"1px solid currentcolor\",\n  padding: `${p.theme.spacing(1)}px 0`,\n  overflow: \"auto\",\n  maxHeight: \"70vh\",\n}));\n\nconst ItemLabel = styled(\"span\")`\n  b {\n    color: ${(p) =>\n      tinycolor(p.theme.hud.secondaryColor).brighten(20).toRgbString()};\n  }\n`;\n\nconst Item = ({\n  n,\n  selected,\n  onSelect,\n  listRef,\n  label,\n}: {\n  n: TreeNode;\n  selected: boolean;\n  onSelect: () => void;\n  listRef: React.MutableRefObject<HTMLDivElement | null>;\n  label: string; // html!\n}) => {\n  const ref = useRef<HTMLButtonElement | null>(null);\n  useEffect(() => {\n    if (selected && listRef.current && ref.current) {\n      scrollElementIntoView(listRef.current, ref.current);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected]);\n  const l = <ItemLabel dangerouslySetInnerHTML={{ __html: label }} />;\n  return (\n    <Button\n      key={n.id}\n      ref={ref}\n      variant=\"listItem\"\n      disabled={n.exclude}\n      selected={selected}\n      onClick={() => {\n        if (n.exclude) {\n          return;\n        }\n        onSelect();\n      }}\n    >\n      {n.exclude ? <s>{l}</s> : l}\n      <NodeStats d={n} />\n    </Button>\n  );\n};\n\nconst Body = styled(\"div\")((p) => ({\n  border: \"1px solid currentcolor\",\n  backgroundColor: p.theme.hud.backgroundColor,\n  borderRadius: 4,\n}));\n\nconst Controls = styled(\"div\")((p) => ({\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  padding: p.theme.spacing(0.5),\n\n  \"> :not(:first-child)\": {\n    marginLeft: p.theme.spacing(),\n  },\n}));\n\nexport const SearchModal = () => {\n  const [\n    {\n      graph: { data: g },\n      hud: {\n        search: { open: searchOpen },\n      },\n    },\n    { setSearchOpen, setSelectedNodeId },\n  ] = useUiState();\n  const cfg = useConfig();\n  const {\n    current: {\n      hud: {\n        search: { showExcludedNodes },\n      },\n    },\n  } = cfg;\n  const [q, setQ] = useState(\"\");\n  const listRef = useRef<HTMLDivElement | null>(null);\n  const [selected, setSelected] = useState<TreeNode | null>(null);\n  const close = () => {\n    setQ(\"\");\n    setSearchOpen(false);\n  };\n  const select = (node: TreeNode) => {\n    if (node.exclude) {\n      return;\n    }\n    setSelectedNodeId(node.id);\n    close();\n  };\n\n  const searchableNodes = useMemo(\n    () => (showExcludedNodes ? g.list : g.list.filter((n) => !n.exclude)),\n    [g, showExcludedNodes]\n  );\n\n  const nodesWithHighlights = useMemo(() => {\n    if (!q) {\n      return searchableNodes.map((node) => ({\n        node,\n        highlightedLabel: node.path,\n      }));\n    }\n    console.time(\"search\");\n    const results = fuzzysort\n      .go<TreeNode>(q, searchableNodes, {\n        key: \"path\",\n        allowTypo: false,\n      })\n      .map((r) => ({\n        node: r.obj,\n        highlightedLabel: fuzzysort.highlight(r, \"<b>\", \"</b>\") || r.obj.path,\n      }));\n\n    console.timeEnd(\"search\");\n    return results;\n  }, [q, searchableNodes]);\n\n  const selectableNodes = useMemo(\n    () => nodesWithHighlights.filter((n) => !n.node.exclude).map((n) => n.node),\n    [nodesWithHighlights]\n  );\n\n  useEffect(() => {\n    setSelected(selectableNodes[0] || null);\n  }, [selectableNodes]);\n\n  return (\n    <Dialog open={searchOpen} onClose={close} width={700} variant=\"plain\">\n      <Controls>\n        <Button\n          variant=\"icon\"\n          onClick={() => toggleShowExcludedNodes(cfg.current, cfg.onChange)}\n        >\n          {showExcludedNodes ? <Eye size={14} /> : <EyeOff size={14} />}\n        </Button>\n        <Button variant=\"icon\">\n          <Settings size={14} />\n        </Button>\n      </Controls>\n      <Body>\n        <CustomInput\n          // cannot autofocus - if the search is triggered\n          // through a keyboard shortcut, it will be immediately\n          // used as input. setTimeout to the rescue\n          ref={(el) => setTimeout(() => el && el.focus())}\n          onKeyDown={(ev) => {\n            if (ev.altKey && ev.key === \"e\") {\n              ev.preventDefault(); // this otherwise triggers a browser window\n              toggleShowExcludedNodes(cfg.current, cfg.onChange);\n              return;\n            }\n            if (ev.key === \"Enter\" && selected) {\n              select(selected);\n            }\n            let sel: TreeNode | undefined;\n            const i = selected ? selectableNodes.indexOf(selected) : -1;\n            if (ev.key === \"ArrowDown\" || (ev.altKey && ev.key === \"j\")) {\n              sel = selectableNodes[i + 1] || selectableNodes[0]; // circle around\n            }\n            if (ev.key === \"ArrowUp\" || (ev.altKey && ev.key === \"k\")) {\n              sel =\n                selectableNodes[i - 1] ||\n                selectableNodes[selectableNodes.length - 2];\n            }\n            sel && setSelected(sel);\n          }}\n          type=\"search\"\n          value={q}\n          onChange={(ev) => setQ(ev.target.value)}\n          fullWidth\n        />\n        <ListContainer ref={listRef}>\n          {nodesWithHighlights.map((n) => (\n            <Item\n              key={n.node.id}\n              listRef={listRef}\n              n={n.node}\n              selected={n.node === selected}\n              onSelect={() => select(n.node)}\n              label={n.highlightedLabel}\n            />\n          ))}\n          {!nodesWithHighlights.length && (\n            <EmptyListItem variant=\"listItem\" disabled={true}>\n              No matches.\n            </EmptyListItem>\n          )}\n        </ListContainer>\n      </Body>\n    </Dialog>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport React, { useRef, useState } from \"react\";\nimport { toggleSidebar, useConfig } from \"../../services/config\";\nimport { useUiState } from \"../../services/uiState\";\nimport { Button } from \"../Button\";\nimport { Hotkeys } from \"../Hotkeys\";\nimport { ConfigPanel } from \"./ConfigPanel\";\nimport { CurrentSelection } from \"./CurrentSelection\";\nimport { DatasetExplorer } from \"./DatasetExplorer\";\nimport { HistoryPanel } from \"./HistoryPanel\";\nimport { HotkeyInfoModal } from \"./HotkeyInfoModal\";\nimport { HudSegment } from \"./HudSegment\";\nimport { NodesPanel } from \"./NodesPanel\";\nimport { OverlayContextProvider, useOverlayContext } from \"./OverlayContext\";\nimport { SearchModal } from \"./SearchModal\";\n\nconst Container = styled(\"div\")<{ overlayActive: boolean }>`\n  background: transparent;\n  z-index: 2;\n  height: 100vh;\n  width: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  pointer-events: ${(p) => (p.overlayActive ? \"all\" : \"none\")};\n\n  h4,\n  h5 {\n    color: ${(p) => p.theme.hud.primaryColor};\n  }\n`;\n\nconst Grid = styled(\"div\")<{ sidebar: boolean }>((p) => ({\n  display: \"grid\",\n  gridTemplateColumns: `${p.sidebar ? \"1fr\" : \"0\"} 3.5fr`,\n  height: \"100%\",\n}));\n\nconst SidebarContainer = styled(HudSegment)<{ open: boolean }>`\n  height: 100%;\n  background-color: ${(p) => p.theme.hud.backgroundColor};\n  ${(p) => !p.open && \"padding: 0;\"}\n  display: grid;\n  grid-template-rows: min-content 1fr;\n  grid-template-areas:\n    \"tabs\"\n    \"tab\";\n`;\n\nconst RightContainer = styled(\"div\")`\n  position: relative;\n`;\n\nconst Tab = styled(\"div\")((p) => ({\n  gridArea: \"tab\",\n  overflow: \"auto\",\n}));\n\nconst Tabs = styled(\"div\")((p) => ({\n  gridArea: \"tabs\",\n  display: \"grid\",\n  gridTemplateColumns: \"repeat(3, 1fr)\",\n  gridColumnGap: p.theme.spacing(3),\n  padding: p.theme.spacing(2),\n  marginBottom: p.theme.spacing(2),\n  borderBottom: `1px solid lightgray`,\n}));\n\nexport const Sidebar = ({ open }: { open: boolean }) => {\n  const [\n    {\n      hud: {\n        sidebar: { tab },\n      },\n      graph: { data: g, selectedNodeId },\n    },\n    { setSidebarTab: setTab, setSelectedNodeId },\n  ] = useUiState();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [openNodes, setOpenNodes] = useState<{ [key: string]: boolean }>({});\n  return (\n    <SidebarContainer open={open} ref={containerRef} as=\"nav\">\n      <Tabs>\n        <Button\n          variant={tab === \"nodes\" ? \"outlined\" : \"standard\"}\n          onClick={() => setTab(\"nodes\")}\n        >\n          Nodes\n        </Button>\n        <Button\n          variant={tab === \"history\" ? \"outlined\" : \"standard\"}\n          onClick={() => setTab(\"history\")}\n        >\n          History\n        </Button>\n        <Button\n          variant={tab === \"config\" ? \"outlined\" : \"standard\"}\n          onClick={() => setTab(\"config\")}\n        >\n          Config\n        </Button>\n      </Tabs>\n      {tab === \"nodes\" && (\n        <Tab>\n          <NodesPanel\n            g={g}\n            selectedNodeId={selectedNodeId}\n            setSelectedNodeId={setSelectedNodeId}\n            openNodes={openNodes}\n            setOpenNodes={setOpenNodes}\n          />\n        </Tab>\n      )}\n      {tab === \"history\" && (\n        <Tab>\n          <HistoryPanel scrollContainer={containerRef.current} />\n        </Tab>\n      )}\n      {tab === \"config\" && (\n        <Tab>\n          <ConfigPanel />\n        </Tab>\n      )}\n    </SidebarContainer>\n  );\n};\n\nconst ControlsContainer = styled(HudSegment)((p) => ({\n  position: \"absolute\",\n  bottom: 0,\n  right: 0,\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: p.theme.spacing(2),\n\n  \"> :not(:first-child)\": {\n    marginLeft: p.theme.spacing(),\n  },\n}));\n\nconst ControlButton: React.FC<{\n  active: boolean;\n  onClick: () => void;\n}> = ({ active, onClick, children }) => (\n  <Button variant={active ? \"outlined\" : \"standard\"} onClick={onClick}>\n    {children}\n  </Button>\n);\n\nconst Controls = () => {\n  const cfg = useConfig();\n  const sidebarOpen = cfg.current.hud.sidebar.open;\n  const [\n    {\n      hud: {\n        hotkeyInfo: { open: hotkeyInfoOpen },\n        search: { open: searchOpen },\n      },\n      graph: { showDetails },\n    },\n    { setHotkeyInfoOpen, setSearchOpen, toggleDetails },\n  ] = useUiState();\n  return (\n    <ControlsContainer>\n      <ControlButton\n        active={sidebarOpen}\n        onClick={() => toggleSidebar(cfg.current, cfg.onChange)}\n      >\n        Sidebar\n      </ControlButton>\n      <ControlButton active={showDetails} onClick={() => toggleDetails()}>\n        Details\n      </ControlButton>\n      <ControlButton\n        active={searchOpen}\n        onClick={() => setSearchOpen(!searchOpen)}\n      >\n        Search\n      </ControlButton>\n      <ControlButton\n        active={hotkeyInfoOpen}\n        onClick={() => setHotkeyInfoOpen(!hotkeyInfoOpen)}\n      >\n        Hotkeys\n      </ControlButton>\n    </ControlsContainer>\n  );\n};\n\nconst Body = () => {\n  const [active] = useOverlayContext();\n  const cfg = useConfig();\n  return (\n    <Container overlayActive={active}>\n      <Grid sidebar={cfg.current.hud.sidebar.open}>\n        <Sidebar open={cfg.current.hud.sidebar.open} />\n        <RightContainer>\n          <CurrentSelection />\n          <Controls />\n          <DatasetExplorer />\n        </RightContainer>\n      </Grid>\n    </Container>\n  );\n};\n\nexport const Hud = () => {\n  return (\n    <OverlayContextProvider>\n      <Hotkeys />\n      <HotkeyInfoModal />\n      <SearchModal />\n      <Body />\n    </OverlayContextProvider>\n  );\n};\n","import { ThemeProvider } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport assertNever from \"assert-never\";\nimport { keyBy } from \"lodash\";\nimport React, { useMemo, useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Graph } from \"./components/Graph\";\nimport { Hud } from \"./components/Hud\";\nimport { CssBaseline } from \"./CssBaseline\";\nimport { ConfigContext } from \"./services/config\";\nimport { Dataset, DatasetProvider, useDatasets } from \"./services/dataset\";\nimport { UiStateProvider } from \"./services/uiState\";\nimport { CONFIG, Config } from \"./types/Config\";\nimport { DependencyNode } from \"./types/DependencyAnalyzer\";\nimport { GraphData, TreeNode } from \"./types/GraphData\";\n\nconst Main = styled(CssBaseline)((p) => ({\n  backgroundColor: p.theme.typography.backgroundColor,\n  color: p.theme.typography.color,\n  width: \"100vw\",\n  height: \"100vh\",\n  overflow: \"hidden\",\n}));\n\nconst shouldExcludeByPath = (\n  path: string,\n  opts: {\n    includeByPath?: RegExp | null;\n    excludeByPath?: RegExp | null;\n  }\n) => {\n  console.log(opts?.includeByPath);\n  if (opts?.includeByPath && !opts.includeByPath.test(path)) {\n    return true;\n  }\n  return !!opts?.excludeByPath?.test(path);\n};\n\nconst depsToGraphData = (\n  ds: DependencyNode[],\n  opts?: {\n    includeByPath?: RegExp | null;\n    excludeByPath?: RegExp | null;\n  }\n): { list: TreeNode[]; byId: { [id: string]: TreeNode } } => {\n  const list: TreeNode[] = [];\n  const byId: { [id: string]: TreeNode } = {};\n  const dsById = keyBy(ds, (d) => d.id);\n  const getOrCreateTreeNode = (d: DependencyNode): TreeNode => {\n    if (!byId[d.id]) {\n      const exclude = shouldExcludeByPath(d.path, opts || {});\n      const t: TreeNode = {\n        id: d.id,\n        label: d.label || d.id,\n        path: d.path,\n        // initialize empty, so that we can collect the object\n        // before we start recursing, preventing issues with circular dependencies\n        dependedBy: { nodes: [], countWithoutExcluded: 0 },\n        dependsOn: { nodes: [], countWithoutExcluded: 0 },\n        exclude,\n      };\n      byId[t.id] = t;\n      list.push(t);\n\n      d.dependsOn.forEach((nextDId) => {\n        const nextD = dsById[nextDId];\n        if (!nextD) {\n          console.log(`No node for ${nextDId} in ${d.id} found`);\n          return;\n        }\n        const nextT = getOrCreateTreeNode(nextD);\n        t.dependsOn.nodes.push(nextT);\n        nextT.dependedBy.nodes.push(t);\n\n        if (!nextT.exclude) {\n          t.dependsOn.countWithoutExcluded++;\n        }\n        if (!t.exclude) {\n          nextT.dependedBy.countWithoutExcluded++;\n        }\n      });\n    }\n    return byId[d.id];\n  };\n  ds.forEach(getOrCreateTreeNode);\n\n  return { list, byId };\n};\n\nconst useGraphData = (\n  ds: DependencyNode[],\n  {\n    includeByPath,\n    excludeByPath,\n  }: {\n    includeByPath?: RegExp | null;\n    excludeByPath?: RegExp | null;\n  }\n): GraphData => {\n  return useMemo(\n    () =>\n      depsToGraphData(ds, {\n        includeByPath,\n        excludeByPath,\n      }),\n    [ds, includeByPath, excludeByPath]\n  );\n};\n\nconst AppReady = ({\n  config: originalConfig,\n  data,\n}: {\n  name: string;\n  config: Config;\n  data: DependencyNode[];\n}) => {\n  const [config, setConfig] = useState(originalConfig);\n  const g = useGraphData(data, {\n    includeByPath: config.graph.includeByPath,\n    excludeByPath: config.graph.excludeByPath,\n  });\n  return (\n    <ConfigContext.Provider\n      value={{\n        current: config,\n        original: originalConfig,\n        onChange: setConfig,\n      }}\n    >\n      <ThemeProvider theme={config.theme}>\n        <UiStateProvider data={g}>\n          <Main as=\"main\">\n            <Hud />\n            <Graph />\n          </Main>\n        </UiStateProvider>\n      </ThemeProvider>\n    </ConfigContext.Provider>\n  );\n};\n\nconst InitCanvas: React.FC = ({ children }) => {\n  const t = CONFIG.theme;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        font: t.typography.font,\n        height: \"100vh\",\n        width: \"100vw\",\n        backgroundColor: t.typography.backgroundColor,\n        color: t.typography.color,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst AppLoading = ({ name }: { name: string }) => {\n  return (\n    <InitCanvas>\n      <div>\n        Loading <b>{name}</b>...\n      </div>\n    </InitCanvas>\n  );\n};\n\nconst AppError = ({ name, error }: { name: string; error: string }) => {\n  console.log(error);\n  return (\n    <InitCanvas>\n      <div>\n        Something went wrong while loading <b>{name}</b>!\n      </div>\n    </InitCanvas>\n  );\n};\n\nconst AppInit = () => {\n  const { current } = useDatasets();\n  switch (current.state) {\n    case \"LOADING\":\n      return <AppLoading name={current.name} />;\n    case \"ERROR\":\n      return <AppError name={current.name} error={current.err} />;\n    case \"READY\":\n      return (\n        <AppReady\n          name={current.name}\n          data={current.data}\n          config={current.config}\n        />\n      );\n    default:\n      return assertNever(current);\n  }\n};\n\nfunction App({ ds }: { ds: Dataset[] }) {\n  // leave router outside so that we can switch datasets through urls later\n  return (\n    <Router>\n      <DatasetProvider datasets={ds}>\n        <AppInit />\n      </DatasetProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { JsonFileAnalyzer } from \"./analyzers/jsonFile\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Dataset } from \"./services/dataset\";\nimport { CONFIG } from \"./types/Config\";\n\nconst toDataset = (key: string): Dataset => ({\n  name: key,\n  fetch: async () => ({\n    config: CONFIG,\n    data: await new JsonFileAnalyzer({ key }).analyze(),\n  }),\n});\n\nconst run = async () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App\n        ds={[\n          toDataset(\"Affilimate CFs\"),\n          toDataset(\"Affilimate CLI\"),\n          toDataset(\"Affilimate App\"),\n          toDataset(\"Syndexioi App\"),\n          toDataset(\"Syndexioi CFs\"),\n          toDataset(\"Self\"),\n          toDataset(\"Material UI\"),\n        ]}\n      />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nrun();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}